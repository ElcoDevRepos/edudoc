// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // RosterValidationStudents
    [Table("RosterValidationStudents", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class RosterValidationStudent: IEntity
    {
        // RosterValidationStudent

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_RosterValidationStudents", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"LastName", Order = 2, TypeName = "varchar")]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName (length: 60)

        [Column(@"FirstName", Order = 3, TypeName = "varchar")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName (length: 35)

        [Column(@"IdentificationCode", Order = 4, TypeName = "varchar")]
        [MaxLength(12)]
        [StringLength(12)]
        [Display(Name = "Identification code")]
        public string IdentificationCode { get; set; } // IdentificationCode (length: 12)

        [Column(@"ReferenceId", Order = 5, TypeName = "varchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Reference ID")]
        public string ReferenceId { get; set; } // ReferenceId (length: 15)

        [Column(@"RejectReasonCode", Order = 6, TypeName = "varchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Reject reason code")]
        public string RejectReasonCode { get; set; } // RejectReasonCode (length: 3)

        [Column(@"FollowUpActionCode", Order = 7, TypeName = "varchar")]
        [MaxLength(3)]
        [StringLength(3)]
        [Display(Name = "Follow up action code")]
        public string FollowUpActionCode { get; set; } // FollowUpActionCode (length: 3)

        [Column(@"Address", Order = 8, TypeName = "varchar")]
        [MaxLength(55)]
        [StringLength(55)]
        [Display(Name = "Address")]
        public string Address { get; set; } // Address (length: 55)

        [Column(@"City", Order = 9, TypeName = "varchar")]
        [MaxLength(30)]
        [StringLength(30)]
        [Display(Name = "City")]
        public string City { get; set; } // City (length: 30)

        [Column(@"State", Order = 10, TypeName = "varchar")]
        [MaxLength(2)]
        [StringLength(2)]
        [Display(Name = "State")]
        public string State { get; set; } // State (length: 2)

        [Column(@"PostalCode", Order = 11, TypeName = "varchar")]
        [MaxLength(15)]
        [StringLength(15)]
        [Display(Name = "Postal code")]
        public string PostalCode { get; set; } // PostalCode (length: 15)

        [Column(@"InsuredDateTimePeriod", Order = 12, TypeName = "varchar")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Insured date time period")]
        public string InsuredDateTimePeriod { get; set; } // InsuredDateTimePeriod (length: 35)

        [Column(@"RosterValidationDistrictId", Order = 13, TypeName = "int")]
        [Display(Name = "Roster validation district ID")]
        public int RosterValidationDistrictId { get; set; } // RosterValidationDistrictId

        [Column(@"StudentId", Order = 14, TypeName = "int")]
        [Display(Name = "Student ID")]
        public int StudentId { get; set; } // StudentId

        [Column(@"IsSuccessfullyProcessed", Order = 15, TypeName = "bit")]
        [Display(Name = "Is successfully processed")]
        public bool IsSuccessfullyProcessed { get; set; } // IsSuccessfullyProcessed

        // Foreign keys

        /// <summary>
        /// Parent RosterValidationDistrict pointed by [RosterValidationStudents].([RosterValidationDistrictId]) (FK_RosterValidationStudents_RosterValidationDistrict)
        /// </summary>
        [InverseProperty("RosterValidationStudents")]
        [ForeignKey("RosterValidationDistrictId")] public RosterValidationDistrict RosterValidationDistrict { get; set; } // FK_RosterValidationStudents_RosterValidationDistrict

        /// <summary>
        /// Parent Student pointed by [RosterValidationStudents].([StudentId]) (FK_RosterValidationStudents_Student)
        /// </summary>
        [InverseProperty("RosterValidationStudents")]
        [ForeignKey("StudentId")] public Student Student { get; set; } // FK_RosterValidationStudents_Student

        public RosterValidationStudent()
        {
            IsSuccessfullyProcessed = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
