// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // CaseLoadScriptGoals
    [Table("CaseLoadScriptGoals", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class CaseLoadScriptGoal: IEntity
    {
        // CaseLoadScriptGoal
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_CaseLoadScriptGoals", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"CaseLoadScriptId", Order = 2, TypeName = "int")]
        [Display(Name = "Case load script ID")]
        public int CaseLoadScriptId { get; set; } // CaseLoadScriptId

        [Column(@"GoalId", Order = 3, TypeName = "int")]
        [Display(Name = "Goal ID")]
        public int GoalId { get; set; } // GoalId

        [Column(@"MedicationName", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Medication name")]
        public string MedicationName { get; set; } // MedicationName (length: 50)

        [Column(@"Archived", Order = 5, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 7, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child EncounterStudentGoals where [EncounterStudentGoals].[CaseLoadScriptGoalId] point to this entity (FK_EncounterStudentGoals_CaseLoadScriptGoals)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudentGoal> EncounterStudentGoals { get; set; } // EncounterStudentGoals.FK_EncounterStudentGoals_CaseLoadScriptGoals

        // Foreign keys

        /// <summary>
        /// Parent CaseLoadScript pointed by [CaseLoadScriptGoals].([CaseLoadScriptId]) (FK_CaseLoadScriptGoals_CaseLoadScript)
        /// </summary>
        [InverseProperty("CaseLoadScriptGoals")]
        [ForeignKey("CaseLoadScriptId")] public CaseLoadScript CaseLoadScript { get; set; } // FK_CaseLoadScriptGoals_CaseLoadScript

        /// <summary>
        /// Parent User pointed by [CaseLoadScriptGoals].([CreatedById]) (FK_CaseLoadScriptGoals_CreatedBy)
        /// </summary>
        [InverseProperty("CaseLoadScriptGoals_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_CaseLoadScriptGoals_CreatedBy

        /// <summary>
        /// Parent Goal pointed by [CaseLoadScriptGoals].([GoalId]) (FK_CaseLoadScriptGoals_Goal)
        /// </summary>
        [InverseProperty("CaseLoadScriptGoals")]
        [ForeignKey("GoalId")] public Goal Goal { get; set; } // FK_CaseLoadScriptGoals_Goal

        /// <summary>
        /// Parent User pointed by [CaseLoadScriptGoals].([ModifiedById]) (FK_CaseLoadScriptGoals_ModifiedBy)
        /// </summary>
        [InverseProperty("CaseLoadScriptGoals_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_CaseLoadScriptGoals_ModifiedBy

        public CaseLoadScriptGoal()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            EncounterStudentGoals = new System.Collections.Generic.List<EncounterStudentGoal>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
