// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ProviderODECertifications
    [Table("ProviderODECertifications", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ProviderOdeCertification: IEntity
    {
        // ProviderODECertification
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ProviderODECertifiactions", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ProviderId", Order = 2, TypeName = "int")]
        [Display(Name = "Provider ID")]
        public int ProviderId { get; set; } // ProviderId

        [Column(@"AsOfDate", Order = 3, TypeName = "datetime")]
        [Display(Name = "As of date")]
        public System.DateTime AsOfDate { get; set; } // AsOfDate

        [Column(@"ExpirationDate", Order = 4, TypeName = "datetime")]
        [Display(Name = "Expiration date")]
        public System.DateTime ExpirationDate { get; set; } // ExpirationDate

        [Column(@"CertificationNumber", Order = 5, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Certification number")]
        public string CertificationNumber { get; set; } // CertificationNumber (length: 10)

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"DateCreated", Order = 7, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [ProviderODECertifications].([CreatedById]) (FK_ProviderODECertifiactions_CreatedBy)
        /// </summary>
        [InverseProperty("ProviderOdeCertifications")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_ProviderODECertifiactions_CreatedBy

        /// <summary>
        /// Parent Provider pointed by [ProviderODECertifications].([ProviderId]) (FK_ProviderODECertifiactions_Providers)
        /// </summary>
        [InverseProperty("ProviderOdeCertifications")]
        [ForeignKey("ProviderId")] public Provider Provider { get; set; } // FK_ProviderODECertifiactions_Providers

        public ProviderOdeCertification()
        {
            CertificationNumber = "0";
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
