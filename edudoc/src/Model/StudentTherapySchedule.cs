// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // StudentTherapySchedules
    [Table("StudentTherapySchedules", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class StudentTherapySchedule: IEntity
    {
        // StudentTherapySchedule

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_StudentTherapySchedules", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"StudentTherapyId", Order = 2, TypeName = "int")]
        [Display(Name = "Student therapy ID")]
        public int StudentTherapyId { get; set; } // StudentTherapyId

        [Column(@"ScheduleStartTime", Order = 3, TypeName = "time")]
        [Display(Name = "Schedule start time")]
        public System.TimeSpan? ScheduleStartTime { get; set; } // ScheduleStartTime

        [Column(@"ScheduleEndTime", Order = 4, TypeName = "time")]
        [Display(Name = "Schedule end time")]
        public System.TimeSpan? ScheduleEndTime { get; set; } // ScheduleEndTime

        [Column(@"ScheduleDate", Order = 5, TypeName = "datetime")]
        [Display(Name = "Schedule date")]
        public System.DateTime? ScheduleDate { get; set; } // ScheduleDate

        [Column(@"DeviationReasonId", Order = 6, TypeName = "int")]
        [Index(@"IX_StudentTherapySchedules", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Deviation reason ID")]
        public int? DeviationReasonId { get; set; } // DeviationReasonId

        [Column(@"DeviationReasonDate", Order = 7, TypeName = "datetime")]
        [Display(Name = "Deviation reason date")]
        public System.DateTime? DeviationReasonDate { get; set; } // DeviationReasonDate

        [Column(@"Archived", Order = 8, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 9, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 10, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 11, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 12, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child EncounterStudents where [EncounterStudents].[StudentTherapyScheduleId] point to this entity (FK_EncounterStudents_StudentTherapySchedules)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudent> EncounterStudents { get; set; } // EncounterStudents.FK_EncounterStudents_StudentTherapySchedules

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [StudentTherapySchedules].([CreatedById]) (FK_StudentTherapySchedules_CreatedBy)
        /// </summary>
        [InverseProperty("StudentTherapySchedules_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_StudentTherapySchedules_CreatedBy

        /// <summary>
        /// Parent User pointed by [StudentTherapySchedules].([ModifiedById]) (FK_StudentTherapySchedules_ModifiedBy)
        /// </summary>
        [InverseProperty("StudentTherapySchedules_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_StudentTherapySchedules_ModifiedBy

        /// <summary>
        /// Parent StudentTherapy pointed by [StudentTherapySchedules].([StudentTherapyId]) (FK_StudentTherapySchedules_StudentTherapy)
        /// </summary>
        [InverseProperty("StudentTherapySchedules")]
        [ForeignKey("StudentTherapyId")] public StudentTherapy StudentTherapy { get; set; } // FK_StudentTherapySchedules_StudentTherapy

        public StudentTherapySchedule()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            EncounterStudents = new System.Collections.Generic.List<EncounterStudent>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
