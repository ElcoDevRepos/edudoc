// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // RosterValidationResponseFiles
    [Table("RosterValidationResponseFiles", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class RosterValidationResponseFile: IEntity, IBasicNameEntity
    {
        // RosterValidationResponseFile
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_RosterValidationResponseFiles", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 200)

        [Column(@"DateUploaded", Order = 3, TypeName = "datetime")]
        [Display(Name = "Date uploaded")]
        public System.DateTime DateUploaded { get; set; } // DateUploaded

        [Column(@"FilePath", Order = 4, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "File path")]
        public string FilePath { get; set; } // FilePath (length: 200)

        [Column(@"UploadedById", Order = 5, TypeName = "int")]
        [Display(Name = "Uploaded by ID")]
        public int? UploadedById { get; set; } // UploadedById

        [Column(@"RosterValidationFileId", Order = 6, TypeName = "int")]
        [Display(Name = "Roster validation file ID")]
        public int RosterValidationFileId { get; set; } // RosterValidationFileId

        // Foreign keys

        /// <summary>
        /// Parent RosterValidationFile pointed by [RosterValidationResponseFiles].([RosterValidationFileId]) (FK_RosterValidationResponseFiles_RosterValidationFile)
        /// </summary>
        [InverseProperty("RosterValidationResponseFiles")]
        [ForeignKey("RosterValidationFileId")] public RosterValidationFile RosterValidationFile { get; set; } // FK_RosterValidationResponseFiles_RosterValidationFile

        /// <summary>
        /// Parent User pointed by [RosterValidationResponseFiles].([UploadedById]) (FK_RosterValidationResponseFiles_Users)
        /// </summary>
        [InverseProperty("RosterValidationResponseFiles")]
        [ForeignKey("UploadedById")] public User User { get; set; } // FK_RosterValidationResponseFiles_Users

        public RosterValidationResponseFile()
        {
            DateUploaded = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
