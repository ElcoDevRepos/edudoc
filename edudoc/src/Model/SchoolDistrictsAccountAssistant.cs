// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // SchoolDistrictsAccountAssistants
    [Table("SchoolDistrictsAccountAssistants", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class SchoolDistrictsAccountAssistant: IEntity
    {
        // SchoolDistrictsAccountAssistant
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_SchoolDistrictsAccountAssistants", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"AccountAssistantId", Order = 2, TypeName = "int")]
        [Display(Name = "Account assistant ID")]
        public int AccountAssistantId { get; set; } // AccountAssistantId

        [Column(@"SchoolDistrictId", Order = 3, TypeName = "int")]
        [Display(Name = "School district ID")]
        public int SchoolDistrictId { get; set; } // SchoolDistrictId

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [SchoolDistrictsAccountAssistants].([AccountAssistantId]) (FK_SchoolDistrictsAccountAssistants_AccountAssistant)
        /// </summary>
        [InverseProperty("SchoolDistrictsAccountAssistants")]
        [ForeignKey("AccountAssistantId")] public User User { get; set; } // FK_SchoolDistrictsAccountAssistants_AccountAssistant

        /// <summary>
        /// Parent SchoolDistrict pointed by [SchoolDistrictsAccountAssistants].([SchoolDistrictId]) (FK_SchoolDistrictsAccountAssistants_SchoolDistrict)
        /// </summary>
        [InverseProperty("SchoolDistrictsAccountAssistants")]
        [ForeignKey("SchoolDistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_SchoolDistrictsAccountAssistants_SchoolDistrict

        public SchoolDistrictsAccountAssistant()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
