// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ServiceCodes
    [Table("ServiceCodes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ServiceCode: IEntity, IBasicNameEntity
    {
        // ServiceCode
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ServiceCodes", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        [Column(@"Code", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Code")]
        public string Code { get; set; } // Code (length: 50)

        [Column(@"Area", Order = 4, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Area")]
        public string Area { get; set; } // Area (length: 50)

        [Column(@"IsBillable", Order = 5, TypeName = "bit")]
        [Display(Name = "Is billable")]
        public bool IsBillable { get; set; } // IsBillable

        [Column(@"NeedsReferral", Order = 6, TypeName = "bit")]
        [Display(Name = "Needs referral")]
        public bool NeedsReferral { get; set; } // NeedsReferral

        [Column(@"CanHaveMultipleProgressReportsPerStudent", Order = 7, TypeName = "bit")]
        [Display(Name = "Can have multiple progress reports per student")]
        public bool CanHaveMultipleProgressReportsPerStudent { get; set; } // CanHaveMultipleProgressReportsPerStudent

        [Column(@"CanCosignProgressReports", Order = 8, TypeName = "bit")]
        [Display(Name = "Can cosign progress reports")]
        public bool CanCosignProgressReports { get; set; } // CanCosignProgressReports

        // Reverse navigation

        /// <summary>
        /// Child ActivitySummaryServiceAreas where [ActivitySummaryServiceAreas].[ServiceAreaId] point to this entity (FK_ActivitySummaryServiceAreas_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<ActivitySummaryServiceArea> ActivitySummaryServiceAreas { get; set; } // ActivitySummaryServiceAreas.FK_ActivitySummaryServiceAreas_ServiceCodes
        /// <summary>
        /// Child BillingScheduleExcludedServiceCodes where [BillingScheduleExcludedServiceCodes].[ServiceCodeId] point to this entity (FK_BillingScheduleExcludedServiceTypes_ServiceCode)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedServiceCode> BillingScheduleExcludedServiceCodes { get; set; } // BillingScheduleExcludedServiceCodes.FK_BillingScheduleExcludedServiceTypes_ServiceCode
        /// <summary>
        /// Child CaseLoads where [CaseLoads].[ServiceCodeId] point to this entity (FK_CaseLoads_ServiceCode)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoad> CaseLoads { get; set; } // CaseLoads.FK_CaseLoads_ServiceCode
        /// <summary>
        /// Child CptCodeAssocations where [CPTCodeAssocations].[ServiceCodeId] point to this entity (FK_CPTCodeAssocations_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<CptCodeAssocation> CptCodeAssocations { get; set; } // CPTCodeAssocations.FK_CPTCodeAssocations_ServiceCodes
        /// <summary>
        /// Child DiagnosisCodeAssociations where [DiagnosisCodeAssociations].[ServiceCodeId] point to this entity (FK_DiagnosisCodeAssociations_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<DiagnosisCodeAssociation> DiagnosisCodeAssociations { get; set; } // DiagnosisCodeAssociations.FK_DiagnosisCodeAssociations_ServiceCodes
        /// <summary>
        /// Child Goals (Many-to-Many) mapped by table [GoalServiceCodes]
        /// </summary>
        public System.Collections.Generic.ICollection<Goal> Goals { get; set; } // Many to many mapping
        /// <summary>
        /// Child Messages where [Messages].[ServiceCodeId] point to this entity (FK_Message_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<Message> Messages { get; set; } // Messages.FK_Message_ServiceCodes
        /// <summary>
        /// Child MessageDocuments where [MessageDocuments].[ServiceCodeId] point to this entity (FK_MessageDocument_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageDocument> MessageDocuments { get; set; } // MessageDocuments.FK_MessageDocument_ServiceCodes
        /// <summary>
        /// Child MessageLinks where [MessageLinks].[ServiceCodeId] point to this entity (FK_MessageLink_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageLink> MessageLinks { get; set; } // MessageLinks.FK_MessageLink_ServiceCodes
        /// <summary>
        /// Child ProviderTitles where [ProviderTitles].[ServiceCodeId] point to this entity (FK_ProviderTitles_ServiceCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderTitle> ProviderTitles { get; set; } // ProviderTitles.FK_ProviderTitles_ServiceCodes
        /// <summary>
        /// Child SupervisorProviderStudentReferalSignOffs where [SupervisorProviderStudentReferalSignOffs].[ServiceCodeId] point to this entity (FK_SupervisorProviderStudentReferalSignOff_ServiceCode)
        /// </summary>
        public System.Collections.Generic.ICollection<SupervisorProviderStudentReferalSignOff> SupervisorProviderStudentReferalSignOffs { get; set; } // SupervisorProviderStudentReferalSignOffs.FK_SupervisorProviderStudentReferalSignOff_ServiceCode

        public ServiceCode()
        {
            NeedsReferral = false;
            CanHaveMultipleProgressReportsPerStudent = false;
            CanCosignProgressReports = false;
            ProviderTitles = new System.Collections.Generic.List<ProviderTitle>();
            MessageDocuments = new System.Collections.Generic.List<MessageDocument>();
            MessageLinks = new System.Collections.Generic.List<MessageLink>();
            BillingScheduleExcludedServiceCodes = new System.Collections.Generic.List<BillingScheduleExcludedServiceCode>();
            CaseLoads = new System.Collections.Generic.List<CaseLoad>();
            Messages = new System.Collections.Generic.List<Message>();
            ActivitySummaryServiceAreas = new System.Collections.Generic.List<ActivitySummaryServiceArea>();
            SupervisorProviderStudentReferalSignOffs = new System.Collections.Generic.List<SupervisorProviderStudentReferalSignOff>();
            CptCodeAssocations = new System.Collections.Generic.List<CptCodeAssocation>();
            DiagnosisCodeAssociations = new System.Collections.Generic.List<DiagnosisCodeAssociation>();
            Goals = new System.Collections.Generic.List<Goal>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
