// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // BillingSchedules
    [Table("BillingSchedules", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class BillingSchedule: IEntity, IBasicNameEntity
    {
        // BillingSchedule

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_BillingSchedules", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        [Column(@"ScheduledDate", Order = 3, TypeName = "datetime")]
        [Display(Name = "Scheduled date")]
        public System.DateTime ScheduledDate { get; set; } // ScheduledDate

        [Column(@"IsReversal", Order = 4, TypeName = "bit")]
        [Display(Name = "Is reversal")]
        public bool IsReversal { get; set; } // IsReversal

        [Column(@"IsSchedule", Order = 5, TypeName = "bit")]
        [Display(Name = "Is schedule")]
        public bool IsSchedule { get; set; } // IsSchedule

        [Column(@"Notes", Order = 6, TypeName = "varchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 500)

        [Column(@"InQueue", Order = 7, TypeName = "bit")]
        [Display(Name = "In queue")]
        public bool InQueue { get; set; } // InQueue

        [Column(@"Archived", Order = 8, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 9, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 10, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 11, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 12, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child BillingFailures where [BillingFailures].[BillingScheduleId] point to this entity (FK_BillingFailures_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingFailure> BillingFailures { get; set; } // BillingFailures.FK_BillingFailures_BillingSchedule
        /// <summary>
        /// Child BillingScheduleAdminNotifications where [BillingScheduleAdminNotifications].[BillingScheduleId] point to this entity (FK_BillingScheduleAdminNotifications_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleAdminNotification> BillingScheduleAdminNotifications { get; set; } // BillingScheduleAdminNotifications.FK_BillingScheduleAdminNotifications_BillingSchedule
        /// <summary>
        /// Child BillingScheduleDistricts where [BillingScheduleDistricts].[BillingScheduleId] point to this entity (FK_BillingScheduleDistricts_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleDistrict> BillingScheduleDistricts { get; set; } // BillingScheduleDistricts.FK_BillingScheduleDistricts_BillingSchedule
        /// <summary>
        /// Child BillingScheduleExcludedCptCodes where [BillingScheduleExcludedCptCodes].[BillingScheduleId] point to this entity (FK_BillingScheduleExcludedCptCodes_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedCptCode> BillingScheduleExcludedCptCodes { get; set; } // BillingScheduleExcludedCptCodes.FK_BillingScheduleExcludedCptCodes_BillingSchedule
        /// <summary>
        /// Child BillingScheduleExcludedProviders where [BillingScheduleExcludedProviders].[BillingScheduleId] point to this entity (FK_BillingScheduleExcludedProviders_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedProvider> BillingScheduleExcludedProviders { get; set; } // BillingScheduleExcludedProviders.FK_BillingScheduleExcludedProviders_BillingSchedule
        /// <summary>
        /// Child BillingScheduleExcludedServiceCodes where [BillingScheduleExcludedServiceCodes].[BillingScheduleId] point to this entity (FK_BillingScheduleExcludedServiceTypes_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedServiceCode> BillingScheduleExcludedServiceCodes { get; set; } // BillingScheduleExcludedServiceCodes.FK_BillingScheduleExcludedServiceTypes_BillingSchedule
        /// <summary>
        /// Child HealthCareClaims where [HealthCareClaims].[BillingScheduleId] point to this entity (FK_HealthCareClaims_BillingSchedules)
        /// </summary>
        public System.Collections.Generic.ICollection<HealthCareClaim> HealthCareClaims { get; set; } // HealthCareClaims.FK_HealthCareClaims_BillingSchedules
        /// <summary>
        /// Child JobsAudits where [JobsAudit].[BillingScheduleId] point to this entity (FK_JobsAudit_BillingSchedule)
        /// </summary>
        public System.Collections.Generic.ICollection<JobsAudit> JobsAudits { get; set; } // JobsAudit.FK_JobsAudit_BillingSchedule

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [BillingSchedules].([CreatedById]) (FK_BillingSchedules_CreatedBy)
        /// </summary>
        [InverseProperty("BillingSchedules_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_BillingSchedules_CreatedBy

        /// <summary>
        /// Parent User pointed by [BillingSchedules].([ModifiedById]) (FK_BillingSchedules_ModifiedBy)
        /// </summary>
        [InverseProperty("BillingSchedules_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_BillingSchedules_ModifiedBy

        public BillingSchedule()
        {
            ScheduledDate = System.DateTime.UtcNow;
            IsReversal = false;
            IsSchedule = false;
            InQueue = false;
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            BillingFailures = new System.Collections.Generic.List<BillingFailure>();
            BillingScheduleAdminNotifications = new System.Collections.Generic.List<BillingScheduleAdminNotification>();
            BillingScheduleDistricts = new System.Collections.Generic.List<BillingScheduleDistrict>();
            HealthCareClaims = new System.Collections.Generic.List<HealthCareClaim>();
            BillingScheduleExcludedCptCodes = new System.Collections.Generic.List<BillingScheduleExcludedCptCode>();
            BillingScheduleExcludedProviders = new System.Collections.Generic.List<BillingScheduleExcludedProvider>();
            JobsAudits = new System.Collections.Generic.List<JobsAudit>();
            BillingScheduleExcludedServiceCodes = new System.Collections.Generic.List<BillingScheduleExcludedServiceCode>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
