// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // EncounterStatuses
    [Table("EncounterStatuses", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class EncounterStatus: IEntity, IBasicNameEntity
    {
        // EncounterStatus
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_EncounterStatusess", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        [Column(@"IsAuditable", Order = 3, TypeName = "bit")]
        [Display(Name = "Is auditable")]
        public bool IsAuditable { get; set; } // IsAuditable

        [Column(@"IsBillable", Order = 4, TypeName = "bit")]
        [Display(Name = "Is billable")]
        public bool IsBillable { get; set; } // IsBillable

        [Column(@"ForReview", Order = 5, TypeName = "bit")]
        [Display(Name = "For review")]
        public bool ForReview { get; set; } // ForReview

        [Column(@"HPCAdminOnly", Order = 6, TypeName = "bit")]
        [Display(Name = "Hpca dmin only")]
        public bool HpcAdminOnly { get; set; } // HPCAdminOnly

        // Reverse navigation

        /// <summary>
        /// Child EncounterStudents where [EncounterStudents].[EncounterStatusId] point to this entity (FK_EncounterStudents_EncounterStatus)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudent> EncounterStudents { get; set; } // EncounterStudents.FK_EncounterStudents_EncounterStatus
        /// <summary>
        /// Child EncounterStudentStatus where [EncounterStudentStatuses].[EncounterStatusId] point to this entity (FK_EncounterStudentStatuses_EncounterStatus)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudentStatus> EncounterStudentStatus { get; set; } // EncounterStudentStatuses.FK_EncounterStudentStatuses_EncounterStatus

        public EncounterStatus()
        {
            IsAuditable = true;
            IsBillable = true;
            ForReview = true;
            HpcAdminOnly = true;
            EncounterStudents = new System.Collections.Generic.List<EncounterStudent>();
            EncounterStudentStatus = new System.Collections.Generic.List<EncounterStudentStatus>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
