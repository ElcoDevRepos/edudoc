// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // NursingGoalResponse
    [Table("NursingGoalResponse", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class NursingGoalResponse: IEntity, IBasicNameEntity
    {
        // NursingGoalResponse

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_NursingGoalResponse", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 250)

        [Column(@"ResponseNoteLabel", Order = 3, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Response note label")]
        public string ResponseNoteLabel { get; set; } // ResponseNoteLabel (length: 250)

        [Column(@"ResponseNote", Order = 4, TypeName = "bit")]
        [Display(Name = "Response note")]
        public bool ResponseNote { get; set; } // ResponseNote

        // Reverse navigation

        /// <summary>
        /// Child Goals where [Goals].[NursingResponseId] point to this entity (FK_Goals_NursingGoalResponse)
        /// </summary>
        public System.Collections.Generic.ICollection<Goal> Goals { get; set; } // Goals.FK_Goals_NursingGoalResponse
        /// <summary>
        /// Child NursingGoalResults (Many-to-Many) mapped by table [NursingGoalResponseResults]
        /// </summary>
        public System.Collections.Generic.ICollection<NursingGoalResult> NursingGoalResults { get; set; } // Many to many mapping

        public NursingGoalResponse()
        {
            ResponseNote = false;
            Goals = new System.Collections.Generic.List<Goal>();
            NursingGoalResults = new System.Collections.Generic.List<NursingGoalResult>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
