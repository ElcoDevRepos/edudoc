// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // Vouchers
    [Table("Vouchers", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class Voucher: IEntity
    {
        // Voucher

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Vouchers", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"VoucherDate", Order = 2, TypeName = "datetime")]
        [Display(Name = "Voucher date")]
        public System.DateTime VoucherDate { get; set; } // VoucherDate

        [Column(@"VoucherAmount", Order = 3, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Voucher amount")]
        public string VoucherAmount { get; set; } // VoucherAmount (length: 18)

        [Column(@"PaidAmount", Order = 4, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Paid amount")]
        public string PaidAmount { get; set; } // PaidAmount (length: 18)

        [Column(@"ServiceCode", Order = 5, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Service code")]
        public string ServiceCode { get; set; } // ServiceCode (length: 100)

        [Column(@"SchoolDistrictId", Order = 6, TypeName = "int")]
        [Display(Name = "School district ID")]
        public int? SchoolDistrictId { get; set; } // SchoolDistrictId

        [Column(@"UnmatchedClaimDistrictId", Order = 7, TypeName = "int")]
        [Display(Name = "Unmatched claim district ID")]
        public int? UnmatchedClaimDistrictId { get; set; } // UnmatchedClaimDistrictId

        [Column(@"SchoolYear", Order = 8, TypeName = "varchar")]
        [MaxLength(9)]
        [StringLength(9)]
        [Display(Name = "School year")]
        public string SchoolYear { get; set; } // SchoolYear (length: 9)

        [Column(@"VoucherTypeId", Order = 9, TypeName = "int")]
        [Display(Name = "Voucher type ID")]
        public int VoucherTypeId { get; set; } // VoucherTypeId

        [Column(@"Archived", Order = 10, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        // Reverse navigation

        /// <summary>
        /// Child VoucherBillingResponseFiles where [VoucherBillingResponseFiles].[VoucherId] point to this entity (FK_VoucherBillingResponseFiles_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<VoucherBillingResponseFile> VoucherBillingResponseFiles { get; set; } // VoucherBillingResponseFiles.FK_VoucherBillingResponseFiles_Providers

        // Foreign keys

        /// <summary>
        /// Parent SchoolDistrict pointed by [Vouchers].([SchoolDistrictId]) (FK_Vouchers_SchoolDistricts)
        /// </summary>
        [InverseProperty("Vouchers")]
        [ForeignKey("SchoolDistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_Vouchers_SchoolDistricts

        /// <summary>
        /// Parent UnmatchedClaimDistrict pointed by [Vouchers].([UnmatchedClaimDistrictId]) (FK_Vouchers_UnmatchedClaimDistricts)
        /// </summary>
        [InverseProperty("Vouchers")]
        [ForeignKey("UnmatchedClaimDistrictId")] public UnmatchedClaimDistrict UnmatchedClaimDistrict { get; set; } // FK_Vouchers_UnmatchedClaimDistricts

        /// <summary>
        /// Parent VoucherType pointed by [Vouchers].([VoucherTypeId]) (FK_Vouchers_VoucherTypes)
        /// </summary>
        [InverseProperty("Vouchers")]
        [ForeignKey("VoucherTypeId")] public VoucherType VoucherType { get; set; } // FK_Vouchers_VoucherTypes

        public Voucher()
        {
            VoucherTypeId = 1;
            Archived = false;
            VoucherBillingResponseFiles = new System.Collections.Generic.List<VoucherBillingResponseFile>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
