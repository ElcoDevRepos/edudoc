// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // EvaluationTypes
    [Table("EvaluationTypes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class EvaluationType: IEntity, IBasicNameEntity
    {
        // EvaluationType
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_EvaluatonTypes", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child CptCodeAssocations where [CPTCodeAssocations].[EvaluationTypeId] point to this entity (FK_CPTCodeAssocations_EvaluationTypes)
        /// </summary>
        public System.Collections.Generic.ICollection<CptCodeAssocation> CptCodeAssocations { get; set; } // CPTCodeAssocations.FK_CPTCodeAssocations_EvaluationTypes
        /// <summary>
        /// Child Encounters where [Encounters].[EvaluationTypeId] point to this entity (FK_Encounters_EvaluationType)
        /// </summary>
        public System.Collections.Generic.ICollection<Encounter> Encounters { get; set; } // Encounters.FK_Encounters_EvaluationType
        /// <summary>
        /// Child EvaluationTypesDiagnosisCodes where [EvaluationTypesDiagnosisCodes].[EvaluationTypeId] point to this entity (FK_EvaluationTypesDiagnosisCodes_EvaluationTypes)
        /// </summary>
        public System.Collections.Generic.ICollection<EvaluationTypesDiagnosisCode> EvaluationTypesDiagnosisCodes { get; set; } // EvaluationTypesDiagnosisCodes.FK_EvaluationTypesDiagnosisCodes_EvaluationTypes

        public EvaluationType()
        {
            Encounters = new System.Collections.Generic.List<Encounter>();
            EvaluationTypesDiagnosisCodes = new System.Collections.Generic.List<EvaluationTypesDiagnosisCode>();
            CptCodeAssocations = new System.Collections.Generic.List<CptCodeAssocation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
