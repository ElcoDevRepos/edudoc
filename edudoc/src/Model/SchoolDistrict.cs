// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // SchoolDistricts
    [Table("SchoolDistricts", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class SchoolDistrict: IEntity, IBasicNameEntity
    {
        // SchoolDistrict

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_SchoolDistricts", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 250)

        [Column(@"Code", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Code")]
        public string Code { get; set; } // Code (length: 50)

        [Column(@"EINNumber", Order = 4, TypeName = "varchar")]
        [MaxLength(9)]
        [StringLength(9)]
        [Display(Name = "Einn umber")]
        public string EinNumber { get; set; } // EINNumber (length: 9)

        [Column(@"IRNNumber", Order = 5, TypeName = "varchar")]
        [MaxLength(6)]
        [StringLength(6)]
        [Display(Name = "Irnn umber")]
        public string IrnNumber { get; set; } // IRNNumber (length: 6)

        [Column(@"NPINumber", Order = 6, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Npin umber")]
        public string NpiNumber { get; set; } // NPINumber (length: 10)

        [Column(@"ProviderNumber", Order = 7, TypeName = "varchar")]
        [MaxLength(7)]
        [StringLength(7)]
        [Display(Name = "Provider number")]
        public string ProviderNumber { get; set; } // ProviderNumber (length: 7)

        [Column(@"BecameTradingPartnerDate", Order = 8, TypeName = "datetime")]
        [Display(Name = "Became trading partner date")]
        public System.DateTime? BecameTradingPartnerDate { get; set; } // BecameTradingPartnerDate

        [Column(@"BecameClientDate", Order = 9, TypeName = "datetime")]
        [Display(Name = "Became client date")]
        public System.DateTime? BecameClientDate { get; set; } // BecameClientDate

        [Column(@"RevalidationDate", Order = 10, TypeName = "datetime")]
        [Display(Name = "Revalidation date")]
        public System.DateTime? RevalidationDate { get; set; } // RevalidationDate

        [Column(@"ValidationExpirationDate", Order = 11, TypeName = "datetime")]
        [Display(Name = "Validation expiration date")]
        public System.DateTime? ValidationExpirationDate { get; set; } // ValidationExpirationDate

        [Column(@"ProgressReports", Order = 12, TypeName = "bit")]
        [Display(Name = "Progress reports")]
        public bool ProgressReports { get; set; } // ProgressReports

        [Column(@"ProgressReportsSent", Order = 13, TypeName = "datetime")]
        [Display(Name = "Progress reports sent")]
        public System.DateTime? ProgressReportsSent { get; set; } // ProgressReportsSent

        [Column(@"RequireNotesForAllEncountersSent", Order = 14, TypeName = "bit")]
        [Display(Name = "Require notes for all encounters sent")]
        public bool RequireNotesForAllEncountersSent { get; set; } // RequireNotesForAllEncountersSent

        [Column(@"NotesRequiredDate", Order = 15, TypeName = "datetime")]
        [Display(Name = "Notes required date")]
        public System.DateTime? NotesRequiredDate { get; set; } // NotesRequiredDate

        [Column(@"Notes", Order = 16, TypeName = "varchar")]
        [MaxLength(1000)]
        [StringLength(1000)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 1000)

        [Column(@"CreatedById", Order = 17, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 18, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 19, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 20, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"UseDisabilityCodes", Order = 21, TypeName = "bit")]
        [Display(Name = "Use disability codes")]
        public bool UseDisabilityCodes { get; set; } // UseDisabilityCodes

        [Column(@"Archived", Order = 22, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"AddressId", Order = 23, TypeName = "int")]
        [Display(Name = "Address ID")]
        public int? AddressId { get; set; } // AddressId

        [Column(@"AccountManagerId", Order = 24, TypeName = "int")]
        [Display(Name = "Account manager ID")]
        public int? AccountManagerId { get; set; } // AccountManagerId

        [Column(@"AccountAssistantId", Order = 25, TypeName = "int")]
        [Display(Name = "Account assistant ID")]
        public int? AccountAssistantId { get; set; } // AccountAssistantId

        [Column(@"TreasurerId", Order = 26, TypeName = "int")]
        [Display(Name = "Treasurer ID")]
        public int? TreasurerId { get; set; } // TreasurerId

        [Column(@"SpecialEducationDirectorId", Order = 27, TypeName = "int")]
        [Display(Name = "Special education director ID")]
        public int? SpecialEducationDirectorId { get; set; } // SpecialEducationDirectorId

        [Column(@"MerId", Order = 28, TypeName = "int")]
        [Display(Name = "Mer ID")]
        public int? MerId { get; set; } // MerId

        [Column(@"ActiveStatus", Order = 29, TypeName = "bit")]
        [Display(Name = "Active status")]
        public bool ActiveStatus { get; set; } // ActiveStatus

        [Column(@"CaseNotesRequired", Order = 30, TypeName = "bit")]
        [Display(Name = "Case notes required")]
        public bool CaseNotesRequired { get; set; } // CaseNotesRequired

        [Column(@"IepDatesRequired", Order = 31, TypeName = "bit")]
        [Display(Name = "Iep dates required")]
        public bool IepDatesRequired { get; set; } // IepDatesRequired

        // Reverse navigation

        /// <summary>
        /// Child ActivitySummaryDistricts where [ActivitySummaryDistricts].[DistrictId] point to this entity (FK_ActivitySummaryDistricts_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<ActivitySummaryDistrict> ActivitySummaryDistricts { get; set; } // ActivitySummaryDistricts.FK_ActivitySummaryDistricts_SchoolDistricts
        /// <summary>
        /// Child AdminSchoolDistricts where [AdminSchoolDistricts].[SchoolDistrictId] point to this entity (FK_AdminSchoolDistrict_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<AdminSchoolDistrict> AdminSchoolDistricts { get; set; } // AdminSchoolDistricts.FK_AdminSchoolDistrict_SchoolDistrict
        /// <summary>
        /// Child AnnualEntries where [AnnualEntries].[SchoolDistrictId] point to this entity (FK_AnnualEntries_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<AnnualEntry> AnnualEntries { get; set; } // AnnualEntries.FK_AnnualEntries_SchoolDistricts
        /// <summary>
        /// Child BillingScheduleDistricts where [BillingScheduleDistricts].[SchoolDistrictId] point to this entity (FK_BillingScheduleDistricts_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleDistrict> BillingScheduleDistricts { get; set; } // BillingScheduleDistricts.FK_BillingScheduleDistricts_SchoolDistrict
        /// <summary>
        /// Child ClaimsDistricts where [ClaimsDistricts].[SchoolDistrictId] point to this entity (FK_ClaimsDistricts_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<ClaimsDistrict> ClaimsDistricts { get; set; } // ClaimsDistricts.FK_ClaimsDistricts_SchoolDistrict
        /// <summary>
        /// Child Contacts (Many-to-Many) mapped by table [SchoolDistrictContacts]
        /// </summary>
        public System.Collections.Generic.ICollection<Contact> Contacts { get; set; } // Many to many mapping
        /// <summary>
        /// Child DistrictProgressReportDates where [DistrictProgressReportDates].[DistrictId] point to this entity (FK_DistrictProgressReportDates_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<DistrictProgressReportDate> DistrictProgressReportDates { get; set; } // DistrictProgressReportDates.FK_DistrictProgressReportDates_SchoolDistricts
        /// <summary>
        /// Child EncounterIdentifiers where [EncounterIdentifiers].[SchoolDistrictId] point to this entity (FK_EncounterIdentifiers_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterIdentifier> EncounterIdentifiers { get; set; } // EncounterIdentifiers.FK_EncounterIdentifiers_SchoolDistricts
        /// <summary>
        /// Child EscSchoolDistricts where [EscSchoolDistricts].[SchoolDistrictId] point to this entity (FK_EscSchoolDistrict_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<EscSchoolDistrict> EscSchoolDistricts { get; set; } // EscSchoolDistricts.FK_EscSchoolDistrict_SchoolDistrict
        /// <summary>
        /// Child Messages where [Messages].[SchoolDistrictId] point to this entity (FK_Message_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<Message> Messages { get; set; } // Messages.FK_Message_SchoolDistricts
        /// <summary>
        /// Child MessageDocuments where [MessageDocuments].[SchoolDistrictId] point to this entity (FK_MessageDocument_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageDocument> MessageDocuments { get; set; } // MessageDocuments.FK_MessageDocument_SchoolDistricts
        /// <summary>
        /// Child MessageLinks where [MessageLinks].[SchoolDistrictId] point to this entity (FK_MessageLink_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageLink> MessageLinks { get; set; } // MessageLinks.FK_MessageLink_SchoolDistricts
        /// <summary>
        /// Child PendingReferrals where [PendingReferrals].[DistrictId] point to this entity (FK_PendingReferrals_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<PendingReferral> PendingReferrals { get; set; } // PendingReferrals.FK_PendingReferrals_SchoolDistricts
        /// <summary>
        /// Child ProviderCaseUploads where [ProviderCaseUploads].[DistrictId] point to this entity (FK_ProviderCaseUploads_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderCaseUpload> ProviderCaseUploads { get; set; } // ProviderCaseUploads.FK_ProviderCaseUploads_SchoolDistricts
        /// <summary>
        /// Child ProviderCaseUploadDocuments where [ProviderCaseUploadDocuments].[DistrictId] point to this entity (FK_ProviderCaseUploadDocuments_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderCaseUploadDocument> ProviderCaseUploadDocuments { get; set; } // ProviderCaseUploadDocuments.FK_ProviderCaseUploadDocuments_SchoolDistricts
        /// <summary>
        /// Child ProviderEscSchoolDistricts where [ProviderEscSchoolDistricts].[SchoolDistrictId] point to this entity (FK_ProviderEscSchoolDistricts_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderEscSchoolDistrict> ProviderEscSchoolDistricts { get; set; } // ProviderEscSchoolDistricts.FK_ProviderEscSchoolDistricts_SchoolDistrict
        /// <summary>
        /// Child RosterValidationDistricts where [RosterValidationDistricts].[SchoolDistrictId] point to this entity (FK_RosterValidationDistricts_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<RosterValidationDistrict> RosterValidationDistricts { get; set; } // RosterValidationDistricts.FK_RosterValidationDistricts_SchoolDistrict
        /// <summary>
        /// Child SchoolDistrictProviderCaseNotes where [SchoolDistrictProviderCaseNotes].[SchoolDistrictId] point to this entity (FK_SchoolDistrictProviderCaseNotes_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictProviderCaseNote> SchoolDistrictProviderCaseNotes { get; set; } // SchoolDistrictProviderCaseNotes.FK_SchoolDistrictProviderCaseNotes_SchoolDistricts
        /// <summary>
        /// Child SchoolDistrictRosters where [SchoolDistrictRosters].[SchoolDistrictId] point to this entity (FK_SchoolDistrictRosters_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictRoster> SchoolDistrictRosters { get; set; } // SchoolDistrictRosters.FK_SchoolDistrictRosters_SchoolDistricts
        /// <summary>
        /// Child SchoolDistrictRosterDocuments where [SchoolDistrictRosterDocuments].[SchoolDistrictId] point to this entity (FK_SchoolDistrictRosterDocuments_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictRosterDocument> SchoolDistrictRosterDocuments { get; set; } // SchoolDistrictRosterDocuments.FK_SchoolDistrictRosterDocuments_SchoolDistricts
        /// <summary>
        /// Child SchoolDistrictsAccountAssistants where [SchoolDistrictsAccountAssistants].[SchoolDistrictId] point to this entity (FK_SchoolDistrictsAccountAssistants_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictsAccountAssistant> SchoolDistrictsAccountAssistants { get; set; } // SchoolDistrictsAccountAssistants.FK_SchoolDistrictsAccountAssistants_SchoolDistrict
        /// <summary>
        /// Child SchoolDistrictsFinancialReps where [SchoolDistrictsFinancialReps].[SchoolDistrictId] point to this entity (FK_SchoolDistrictsFinancialReps_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictsFinancialRep> SchoolDistrictsFinancialReps { get; set; } // SchoolDistrictsFinancialReps.FK_SchoolDistrictsFinancialReps_SchoolDistrict
        /// <summary>
        /// Child SchoolDistrictsSchools where [SchoolDistrictsSchools].[SchoolDistrictId] point to this entity (FK_SchoolDistrictsSchools_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictsSchool> SchoolDistrictsSchools { get; set; } // SchoolDistrictsSchools.FK_SchoolDistrictsSchools_SchoolDistricts
        /// <summary>
        /// Child Students where [Students].[DistrictId] point to this entity (FK_Students_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<Student> Students { get; set; } // Students.FK_Students_SchoolDistrict
        /// <summary>
        /// Child StudentDistrictWithdrawals where [StudentDistrictWithdrawals].[DistrictId] point to this entity (FK_StudentDistrictWithdrawals_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentDistrictWithdrawal> StudentDistrictWithdrawals { get; set; } // StudentDistrictWithdrawals.FK_StudentDistrictWithdrawals_SchoolDistrict
        /// <summary>
        /// Child UnmatchedClaimRespons where [UnmatchedClaimResponses].[DistrictId] point to this entity (FK_UnmatchedClaimResponses_District)
        /// </summary>
        public System.Collections.Generic.ICollection<UnmatchedClaimRespons> UnmatchedClaimRespons { get; set; } // UnmatchedClaimResponses.FK_UnmatchedClaimResponses_District
        /// <summary>
        /// Child Users (Many-to-Many) mapped by table [SchoolDistrictAdmins]
        /// </summary>
        public System.Collections.Generic.ICollection<User> Users_DistrictAdminId { get; set; } // Many to many mapping
        /// <summary>
        /// Child Users where [Users].[SchoolDistrictId] point to this entity (FK_Users_SchoolDistrict)
        /// </summary>
        public System.Collections.Generic.ICollection<User> Users_SchoolDistrictId { get; set; } // Users.FK_Users_SchoolDistrict
        /// <summary>
        /// Child Vouchers where [Vouchers].[SchoolDistrictId] point to this entity (FK_Vouchers_SchoolDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<Voucher> Vouchers { get; set; } // Vouchers.FK_Vouchers_SchoolDistricts

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [SchoolDistricts].([AccountAssistantId]) (FK_SchoolDistricts_AccountAssistant)
        /// </summary>
        [InverseProperty("SchoolDistricts_AccountAssistantId")]
        [ForeignKey("AccountAssistantId")] public User AccountAssistant { get; set; } // FK_SchoolDistricts_AccountAssistant

        /// <summary>
        /// Parent User pointed by [SchoolDistricts].([AccountManagerId]) (FK_SchoolDistricts_AccountManager)
        /// </summary>
        [InverseProperty("SchoolDistricts_AccountManagerId")]
        [ForeignKey("AccountManagerId")] public User AccountManager { get; set; } // FK_SchoolDistricts_AccountManager

        /// <summary>
        /// Parent Address pointed by [SchoolDistricts].([AddressId]) (FK_SchoolDistricts_Addresses)
        /// </summary>
        [InverseProperty("SchoolDistricts")]
        [ForeignKey("AddressId")] public Address Address { get; set; } // FK_SchoolDistricts_Addresses

        /// <summary>
        /// Parent User pointed by [SchoolDistricts].([CreatedById]) (FK_SchoolDistricts_CreatedBy)
        /// </summary>
        [InverseProperty("SchoolDistricts_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_SchoolDistricts_CreatedBy

        /// <summary>
        /// Parent Document pointed by [SchoolDistricts].([MerId]) (FK_SchoolDistricts_MerFile)
        /// </summary>
        [InverseProperty("SchoolDistricts")]
        [ForeignKey("MerId")] public Document Document { get; set; } // FK_SchoolDistricts_MerFile

        /// <summary>
        /// Parent User pointed by [SchoolDistricts].([ModifiedById]) (FK_SchoolDistricts_ModifiedBy)
        /// </summary>
        [InverseProperty("SchoolDistricts_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_SchoolDistricts_ModifiedBy

        /// <summary>
        /// Parent Contact pointed by [SchoolDistricts].([SpecialEducationDirectorId]) (FK_SchoolDistricts_SpecialEducationDirector)
        /// </summary>
        [InverseProperty("SchoolDistricts_SpecialEducationDirectorId")]
        [ForeignKey("SpecialEducationDirectorId")] public Contact SpecialEducationDirector { get; set; } // FK_SchoolDistricts_SpecialEducationDirector

        /// <summary>
        /// Parent Contact pointed by [SchoolDistricts].([TreasurerId]) (FK_SchoolDistricts_Treasurer)
        /// </summary>
        [InverseProperty("SchoolDistricts_TreasurerId")]
        [ForeignKey("TreasurerId")] public Contact Treasurer { get; set; } // FK_SchoolDistricts_Treasurer

        public SchoolDistrict()
        {
            ProgressReports = false;
            RequireNotesForAllEncountersSent = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            UseDisabilityCodes = false;
            Archived = false;
            ActiveStatus = true;
            CaseNotesRequired = false;
            IepDatesRequired = false;
            Vouchers = new System.Collections.Generic.List<Voucher>();
            DistrictProgressReportDates = new System.Collections.Generic.List<DistrictProgressReportDate>();
            EncounterIdentifiers = new System.Collections.Generic.List<EncounterIdentifier>();
            ActivitySummaryDistricts = new System.Collections.Generic.List<ActivitySummaryDistrict>();
            RosterValidationDistricts = new System.Collections.Generic.List<RosterValidationDistrict>();
            MessageDocuments = new System.Collections.Generic.List<MessageDocument>();
            SchoolDistrictProviderCaseNotes = new System.Collections.Generic.List<SchoolDistrictProviderCaseNote>();
            AdminSchoolDistricts = new System.Collections.Generic.List<AdminSchoolDistrict>();
            SchoolDistrictRosterDocuments = new System.Collections.Generic.List<SchoolDistrictRosterDocument>();
            AnnualEntries = new System.Collections.Generic.List<AnnualEntry>();
            SchoolDistrictRosters = new System.Collections.Generic.List<SchoolDistrictRoster>();
            MessageLinks = new System.Collections.Generic.List<MessageLink>();
            EscSchoolDistricts = new System.Collections.Generic.List<EscSchoolDistrict>();
            SchoolDistrictsAccountAssistants = new System.Collections.Generic.List<SchoolDistrictsAccountAssistant>();
            SchoolDistrictsFinancialReps = new System.Collections.Generic.List<SchoolDistrictsFinancialRep>();
            SchoolDistrictsSchools = new System.Collections.Generic.List<SchoolDistrictsSchool>();
            BillingScheduleDistricts = new System.Collections.Generic.List<BillingScheduleDistrict>();
            StudentDistrictWithdrawals = new System.Collections.Generic.List<StudentDistrictWithdrawal>();
            Students = new System.Collections.Generic.List<Student>();
            Messages = new System.Collections.Generic.List<Message>();
            ClaimsDistricts = new System.Collections.Generic.List<ClaimsDistrict>();
            PendingReferrals = new System.Collections.Generic.List<PendingReferral>();
            UnmatchedClaimRespons = new System.Collections.Generic.List<UnmatchedClaimRespons>();
            ProviderCaseUploadDocuments = new System.Collections.Generic.List<ProviderCaseUploadDocument>();
            ProviderCaseUploads = new System.Collections.Generic.List<ProviderCaseUpload>();
            ProviderEscSchoolDistricts = new System.Collections.Generic.List<ProviderEscSchoolDistrict>();
            Users_SchoolDistrictId = new System.Collections.Generic.List<User>();
            Users_DistrictAdminId = new System.Collections.Generic.List<User>();
            Contacts = new System.Collections.Generic.List<Contact>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
