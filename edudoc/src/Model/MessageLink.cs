// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // MessageLinks
    [Table("MessageLinks", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class MessageLink: IEntity
    {
        // MessageLink
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_MessageLinks", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Description", Order = 2, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 200)

        [Column(@"URL", Order = 3, TypeName = "varchar")]
        [MaxLength(1000)]
        [StringLength(1000)]
        [Url]
        [Display(Name = "Url")]
        public string Url { get; set; } // URL (length: 1000)

        [Column(@"ValidTill", Order = 4, TypeName = "datetime")]
        [Display(Name = "Valid till")]
        public System.DateTime? ValidTill { get; set; } // ValidTill

        [Column(@"Mandatory", Order = 5, TypeName = "bit")]
        [Display(Name = "Mandatory")]
        public bool Mandatory { get; set; } // Mandatory

        [Column(@"TrainingTypeId", Order = 6, TypeName = "int")]
        [Display(Name = "Training type ID")]
        public int? TrainingTypeId { get; set; } // TrainingTypeId

        [Column(@"DueDate", Order = 7, TypeName = "datetime")]
        [Display(Name = "Due date")]
        public System.DateTime? DueDate { get; set; } // DueDate

        [Column(@"CreatedById", Order = 8, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 9, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 10, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 11, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Archived", Order = 12, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"MessageFilterTypeId", Order = 13, TypeName = "int")]
        [Display(Name = "Message filter type ID")]
        public int MessageFilterTypeId { get; set; } // MessageFilterTypeId

        [Column(@"ServiceCodeId", Order = 14, TypeName = "int")]
        [Display(Name = "Service code ID")]
        public int? ServiceCodeId { get; set; } // ServiceCodeId

        [Column(@"SchoolDistrictId", Order = 15, TypeName = "int")]
        [Display(Name = "School district ID")]
        public int? SchoolDistrictId { get; set; } // SchoolDistrictId

        [Column(@"ForDistrictAdmins", Order = 16, TypeName = "bit")]
        [Display(Name = "For district admins")]
        public bool ForDistrictAdmins { get; set; } // ForDistrictAdmins

        [Column(@"ProviderTitleId", Order = 17, TypeName = "int")]
        [Display(Name = "Provider title ID")]
        public int? ProviderTitleId { get; set; } // ProviderTitleId

        [Column(@"ProviderId", Order = 18, TypeName = "int")]
        [Display(Name = "Provider ID")]
        public int? ProviderId { get; set; } // ProviderId

        [Column(@"EscId", Order = 19, TypeName = "int")]
        [Display(Name = "Esc ID")]
        public int? EscId { get; set; } // EscId

        // Reverse navigation

        /// <summary>
        /// Child ProviderTrainings where [ProviderTrainings].[LinkId] point to this entity (FK_ProviderTrainings_MessageLink)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderTraining> ProviderTrainings { get; set; } // ProviderTrainings.FK_ProviderTrainings_MessageLink

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [MessageLinks].([CreatedById]) (FK_MessageLinks_CreatedBy)
        /// </summary>
        [InverseProperty("MessageLinks_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_MessageLinks_CreatedBy

        /// <summary>
        /// Parent Esc pointed by [MessageLinks].([EscId]) (FK_MessageLink_Escs)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("EscId")] public Esc Esc { get; set; } // FK_MessageLink_Escs

        /// <summary>
        /// Parent MessageFilterType pointed by [MessageLinks].([MessageFilterTypeId]) (FK_MessageLinks_MessageFilterTypes)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("MessageFilterTypeId")] public MessageFilterType MessageFilterType { get; set; } // FK_MessageLinks_MessageFilterTypes

        /// <summary>
        /// Parent User pointed by [MessageLinks].([ModifiedById]) (FK_MessageLinks_ModifiedBy)
        /// </summary>
        [InverseProperty("MessageLinks_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_MessageLinks_ModifiedBy

        /// <summary>
        /// Parent Provider pointed by [MessageLinks].([ProviderId]) (FK_MessageLink_Providers)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("ProviderId")] public Provider Provider { get; set; } // FK_MessageLink_Providers

        /// <summary>
        /// Parent ProviderTitle pointed by [MessageLinks].([ProviderTitleId]) (FK_MessageLink_ProviderTitles)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("ProviderTitleId")] public ProviderTitle ProviderTitle { get; set; } // FK_MessageLink_ProviderTitles

        /// <summary>
        /// Parent SchoolDistrict pointed by [MessageLinks].([SchoolDistrictId]) (FK_MessageLink_SchoolDistricts)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("SchoolDistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_MessageLink_SchoolDistricts

        /// <summary>
        /// Parent ServiceCode pointed by [MessageLinks].([ServiceCodeId]) (FK_MessageLink_ServiceCodes)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("ServiceCodeId")] public ServiceCode ServiceCode { get; set; } // FK_MessageLink_ServiceCodes

        /// <summary>
        /// Parent TrainingType pointed by [MessageLinks].([TrainingTypeId]) (FK_MessageLinks_TrainingType)
        /// </summary>
        [InverseProperty("MessageLinks")]
        [ForeignKey("TrainingTypeId")] public TrainingType TrainingType { get; set; } // FK_MessageLinks_TrainingType

        public MessageLink()
        {
            Mandatory = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            Archived = false;
            ForDistrictAdmins = false;
            ProviderTrainings = new System.Collections.Generic.List<ProviderTraining>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
