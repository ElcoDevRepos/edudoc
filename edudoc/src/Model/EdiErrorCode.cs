// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // EdiErrorCodes
    [Table("EdiErrorCodes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class EdiErrorCode: IEntity, IBasicNameEntity
    {
        // EdiErrorCode
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_EdiErrorCodes", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ErrorCode", Order = 2, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Error code")]
        public string ErrorCode { get; set; } // ErrorCode (length: 10)

        [Column(@"Name", Order = 3, TypeName = "varchar")]
        [MaxLength(750)]
        [StringLength(750)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 750)

        [Column(@"EdiFileTypeId", Order = 4, TypeName = "int")]
        [Display(Name = "Edi file type ID")]
        public int EdiFileTypeId { get; set; } // EdiFileTypeId

        [Column(@"Archived", Order = 5, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 7, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child ClaimsEncounters where [ClaimsEncounters].[EdiErrorCodeId] point to this entity (FK_ClaimsEncounters_EdiErrorCode)
        /// </summary>
        public System.Collections.Generic.ICollection<ClaimsEncounter> ClaimsEncounters { get; set; } // ClaimsEncounters.FK_ClaimsEncounters_EdiErrorCode
        /// <summary>
        /// Child UnmatchedClaimRespons where [UnmatchedClaimResponses].[EdiErrorCodeId] point to this entity (FK_UnmatchedClaimResponses_EdiErrorCode)
        /// </summary>
        public System.Collections.Generic.ICollection<UnmatchedClaimRespons> UnmatchedClaimRespons { get; set; } // UnmatchedClaimResponses.FK_UnmatchedClaimResponses_EdiErrorCode

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [EdiErrorCodes].([CreatedById]) (FK_EdiErrorCodes_CreatedBy)
        /// </summary>
        [InverseProperty("EdiErrorCodes_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_EdiErrorCodes_CreatedBy

        /// <summary>
        /// Parent EdiFileType pointed by [EdiErrorCodes].([EdiFileTypeId]) (FK_EdiErrorCodes_EdiFileType)
        /// </summary>
        [InverseProperty("EdiErrorCodes")]
        [ForeignKey("EdiFileTypeId")] public EdiFileType EdiFileType { get; set; } // FK_EdiErrorCodes_EdiFileType

        /// <summary>
        /// Parent User pointed by [EdiErrorCodes].([ModifiedById]) (FK_EdiErrorCodes_ModifiedBy)
        /// </summary>
        [InverseProperty("EdiErrorCodes_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_EdiErrorCodes_ModifiedBy

        public EdiErrorCode()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            ClaimsEncounters = new System.Collections.Generic.List<ClaimsEncounter>();
            UnmatchedClaimRespons = new System.Collections.Generic.List<UnmatchedClaimRespons>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
