// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ProviderTrainings
    [Table("ProviderTrainings", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ProviderTraining: IEntity
    {
        // ProviderTraining
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ProviderTrainings", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"DocumentId", Order = 2, TypeName = "int")]
        [Display(Name = "Document ID")]
        public int? DocumentId { get; set; } // DocumentId

        [Column(@"LinkId", Order = 3, TypeName = "int")]
        [Display(Name = "Link ID")]
        public int? LinkId { get; set; } // LinkId

        [Column(@"ProviderId", Order = 4, TypeName = "int")]
        [Display(Name = "Provider ID")]
        public int ProviderId { get; set; } // ProviderId

        [Column(@"Archived", Order = 5, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"DateCreated", Order = 7, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DueDate", Order = 8, TypeName = "datetime")]
        [Display(Name = "Due date")]
        public System.DateTime? DueDate { get; set; } // DueDate

        [Column(@"DateCompleted", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date completed")]
        public System.DateTime? DateCompleted { get; set; } // DateCompleted

        [Column(@"LastReminder", Order = 10, TypeName = "datetime")]
        [Display(Name = "Last reminder")]
        public System.DateTime? LastReminder { get; set; } // LastReminder

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [ProviderTrainings].([CreatedById]) (FK_ProviderTrainings_CreatedBy)
        /// </summary>
        [InverseProperty("ProviderTrainings")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_ProviderTrainings_CreatedBy

        /// <summary>
        /// Parent MessageDocument pointed by [ProviderTrainings].([DocumentId]) (FK_ProviderTrainings_MessageDocument)
        /// </summary>
        [InverseProperty("ProviderTrainings")]
        [ForeignKey("DocumentId")] public MessageDocument MessageDocument { get; set; } // FK_ProviderTrainings_MessageDocument

        /// <summary>
        /// Parent MessageLink pointed by [ProviderTrainings].([LinkId]) (FK_ProviderTrainings_MessageLink)
        /// </summary>
        [InverseProperty("ProviderTrainings")]
        [ForeignKey("LinkId")] public MessageLink MessageLink { get; set; } // FK_ProviderTrainings_MessageLink

        /// <summary>
        /// Parent Provider pointed by [ProviderTrainings].([ProviderId]) (FK_ProviderTrainings_Provider)
        /// </summary>
        [InverseProperty("ProviderTrainings")]
        [ForeignKey("ProviderId")] public Provider Provider { get; set; } // FK_ProviderTrainings_Provider

        public ProviderTraining()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
