// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ProviderEscAssignments
    [Table("ProviderEscAssignments", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ProviderEscAssignment: IEntity
    {
        // ProviderEscAssignment
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ProviderEscs", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ProviderId", Order = 2, TypeName = "int")]
        [Index(@"IX_ProviderEscAssignments_ProviderId_Archived", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Provider ID")]
        public int ProviderId { get; set; } // ProviderId

        [Column(@"EscId", Order = 3, TypeName = "int")]
        [Display(Name = "Esc ID")]
        public int? EscId { get; set; } // EscId

        [Column(@"StartDate", Order = 4, TypeName = "datetime")]
        [Display(Name = "Start date")]
        public System.DateTime StartDate { get; set; } // StartDate

        [Column(@"EndDate", Order = 5, TypeName = "datetime")]
        [Display(Name = "End date")]
        public System.DateTime? EndDate { get; set; } // EndDate

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 7, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Archived", Order = 10, TypeName = "bit")]
        [Index(@"IX_ProviderEscAssignments_ProviderId_Archived", 2, IsUnique = false, IsClustered = false)]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"AgencyTypeId", Order = 11, TypeName = "int")]
        [Display(Name = "Agency type ID")]
        public int? AgencyTypeId { get; set; } // AgencyTypeId

        [Column(@"AgencyId", Order = 12, TypeName = "int")]
        [Display(Name = "Agency ID")]
        public int? AgencyId { get; set; } // AgencyId

        // Reverse navigation

        /// <summary>
        /// Child ProviderEscSchoolDistricts where [ProviderEscSchoolDistricts].[ProviderEscAssignmentId] point to this entity (FK_ProviderEscSchoolDistricts_ProviderEsc)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderEscSchoolDistrict> ProviderEscSchoolDistricts { get; set; } // ProviderEscSchoolDistricts.FK_ProviderEscSchoolDistricts_ProviderEsc

        // Foreign keys

        /// <summary>
        /// Parent Agency pointed by [ProviderEscAssignments].([AgencyId]) (FK_ProviderEscs_Agencies)
        /// </summary>
        [InverseProperty("ProviderEscAssignments")]
        [ForeignKey("AgencyId")] public Agency Agency { get; set; } // FK_ProviderEscs_Agencies

        /// <summary>
        /// Parent AgencyType pointed by [ProviderEscAssignments].([AgencyTypeId]) (FK_ProviderEscs_AgencyType)
        /// </summary>
        [InverseProperty("ProviderEscAssignments")]
        [ForeignKey("AgencyTypeId")] public AgencyType AgencyType { get; set; } // FK_ProviderEscs_AgencyType

        /// <summary>
        /// Parent User pointed by [ProviderEscAssignments].([CreatedById]) (FK_ProviderEscs_CreatedBy)
        /// </summary>
        [InverseProperty("ProviderEscAssignments_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_ProviderEscs_CreatedBy

        /// <summary>
        /// Parent Esc pointed by [ProviderEscAssignments].([EscId]) (FK_ProviderEscs_Esc)
        /// </summary>
        [InverseProperty("ProviderEscAssignments")]
        [ForeignKey("EscId")] public Esc Esc { get; set; } // FK_ProviderEscs_Esc

        /// <summary>
        /// Parent User pointed by [ProviderEscAssignments].([ModifiedById]) (FK_ProviderEscs_ModifiedBy)
        /// </summary>
        [InverseProperty("ProviderEscAssignments_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_ProviderEscs_ModifiedBy

        /// <summary>
        /// Parent Provider pointed by [ProviderEscAssignments].([ProviderId]) (FK_ProviderEscs_Providers)
        /// </summary>
        [InverseProperty("ProviderEscAssignments")]
        [ForeignKey("ProviderId")] public Provider Provider { get; set; } // FK_ProviderEscs_Providers

        public ProviderEscAssignment()
        {
            StartDate = System.DateTime.UtcNow;
            DateCreated = System.DateTime.UtcNow;
            Archived = false;
            ProviderEscSchoolDistricts = new System.Collections.Generic.List<ProviderEscSchoolDistrict>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
