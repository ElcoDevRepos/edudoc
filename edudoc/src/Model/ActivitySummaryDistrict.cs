// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ActivitySummaryDistricts
    [Table("ActivitySummaryDistricts", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ActivitySummaryDistrict: IEntity
    {
        // ActivitySummaryDistrict
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ActivitySummaryDistricts", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"DistrictId", Order = 2, TypeName = "int")]
        [Display(Name = "District ID")]
        public int DistrictId { get; set; } // DistrictId

        [Column(@"ReferralsPending", Order = 3, TypeName = "int")]
        [Display(Name = "Referrals pending")]
        public int ReferralsPending { get; set; } // ReferralsPending

        [Column(@"EncountersReturned", Order = 4, TypeName = "int")]
        [Display(Name = "Encounters returned")]
        public int EncountersReturned { get; set; } // EncountersReturned

        [Column(@"PendingSupervisorCoSign", Order = 5, TypeName = "int")]
        [Display(Name = "Pending supervisor co sign")]
        public int PendingSupervisorCoSign { get; set; } // PendingSupervisorCoSign

        [Column(@"EncountersReadyForScheduling", Order = 6, TypeName = "int")]
        [Display(Name = "Encounters ready for scheduling")]
        public int EncountersReadyForScheduling { get; set; } // EncountersReadyForScheduling

        [Column(@"PendingEvaluations", Order = 7, TypeName = "int")]
        [Display(Name = "Pending evaluations")]
        public int PendingEvaluations { get; set; } // PendingEvaluations

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"CreatedById", Order = 9, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"ActivitySummaryId", Order = 10, TypeName = "int")]
        [Display(Name = "Activity summary ID")]
        public int? ActivitySummaryId { get; set; } // ActivitySummaryId

        // Reverse navigation

        /// <summary>
        /// Child ActivitySummaryServiceAreas where [ActivitySummaryServiceAreas].[ActivitySummaryDistrictId] point to this entity (FK_ActivitySummaryServiceAreas_ActivitySummaryDistricts)
        /// </summary>
        public System.Collections.Generic.ICollection<ActivitySummaryServiceArea> ActivitySummaryServiceAreas { get; set; } // ActivitySummaryServiceAreas.FK_ActivitySummaryServiceAreas_ActivitySummaryDistricts

        // Foreign keys

        /// <summary>
        /// Parent ActivitySummary pointed by [ActivitySummaryDistricts].([ActivitySummaryId]) (FK_ActivitySummaryDistricts_ActivitySummaries)
        /// </summary>
        [InverseProperty("ActivitySummaryDistricts")]
        [ForeignKey("ActivitySummaryId")] public ActivitySummary ActivitySummary { get; set; } // FK_ActivitySummaryDistricts_ActivitySummaries

        /// <summary>
        /// Parent User pointed by [ActivitySummaryDistricts].([CreatedById]) (FK_ActivitySummaryDistricts_Users)
        /// </summary>
        [InverseProperty("ActivitySummaryDistricts")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_ActivitySummaryDistricts_Users

        /// <summary>
        /// Parent SchoolDistrict pointed by [ActivitySummaryDistricts].([DistrictId]) (FK_ActivitySummaryDistricts_SchoolDistricts)
        /// </summary>
        [InverseProperty("ActivitySummaryDistricts")]
        [ForeignKey("DistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_ActivitySummaryDistricts_SchoolDistricts

        public ActivitySummaryDistrict()
        {
            ReferralsPending = 0;
            EncountersReturned = 0;
            PendingSupervisorCoSign = 0;
            EncountersReadyForScheduling = 0;
            PendingEvaluations = 0;
            DateCreated = System.DateTime.Now;
            CreatedById = 1;
            ActivitySummaryServiceAreas = new System.Collections.Generic.List<ActivitySummaryServiceArea>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
