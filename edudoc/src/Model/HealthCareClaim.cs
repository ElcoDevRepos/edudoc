// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // HealthCareClaims
    [Table("HealthCareClaims", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class HealthCareClaim: IEntity
    {
        // HealthCareClaim
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_HealthCareClaims", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"DateCreated", Order = 2, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"PageCount", Order = 3, TypeName = "int")]
        [Display(Name = "Page count")]
        public int PageCount { get; set; } // PageCount

        [Column(@"BillingScheduleId", Order = 4, TypeName = "int")]
        [Display(Name = "Billing schedule ID")]
        public int? BillingScheduleId { get; set; } // BillingScheduleId

        // Reverse navigation

        /// <summary>
        /// Child BillingFiles where [BillingFiles].[HealthCareClaimId] point to this entity (FK_BillingFiles_HealthCareClaim)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingFile> BillingFiles { get; set; } // BillingFiles.FK_BillingFiles_HealthCareClaim
        /// <summary>
        /// Child ClaimsDistricts where [ClaimsDistricts].[HealthCareClaimsId] point to this entity (FK_ClaimsDistricts_HealthCareClaims)
        /// </summary>
        public System.Collections.Generic.ICollection<ClaimsDistrict> ClaimsDistricts { get; set; } // ClaimsDistricts.FK_ClaimsDistricts_HealthCareClaims
        /// <summary>
        /// Child ClaimsEncounters where [ClaimsEncounters].[ReversedClaimId] point to this entity (FK_ClaimsEncounters_ReversedClaim)
        /// </summary>
        public System.Collections.Generic.ICollection<ClaimsEncounter> ClaimsEncounters { get; set; } // ClaimsEncounters.FK_ClaimsEncounters_ReversedClaim

        // Foreign keys

        /// <summary>
        /// Parent BillingSchedule pointed by [HealthCareClaims].([BillingScheduleId]) (FK_HealthCareClaims_BillingSchedules)
        /// </summary>
        [InverseProperty("HealthCareClaims")]
        [ForeignKey("BillingScheduleId")] public BillingSchedule BillingSchedule { get; set; } // FK_HealthCareClaims_BillingSchedules

        public HealthCareClaim()
        {
            DateCreated = System.DateTime.Now;
            PageCount = 1;
            ClaimsEncounters = new System.Collections.Generic.List<ClaimsEncounter>();
            BillingFiles = new System.Collections.Generic.List<BillingFile>();
            ClaimsDistricts = new System.Collections.Generic.List<ClaimsDistrict>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
