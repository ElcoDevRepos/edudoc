// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ClearedAuthTokens
    [Table("ClearedAuthTokens", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ClearedAuthToken: IEntity
    {
        // ClearedAuthToken
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ClearedAuthTokens", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"IdentifierKey", Order = 2, TypeName = "varbinary")]
        [MaxLength(64)]
        [Display(Name = "Identifier key")]
        public byte[] IdentifierKey { get; set; } // IdentifierKey (length: 64)

        [Column(@"Salt", Order = 3, TypeName = "varbinary")]
        [MaxLength(64)]
        [Display(Name = "Salt")]
        public byte[] Salt { get; set; } // Salt (length: 64)

        [Column(@"AuthUserId", Order = 4, TypeName = "int")]
        [Display(Name = "Auth user ID")]
        public int AuthUserId { get; set; } // AuthUserId

        [Column(@"AuthClientId", Order = 5, TypeName = "int")]
        [Display(Name = "Auth client ID")]
        public int AuthClientId { get; set; } // AuthClientId

        [Column(@"IssuedUtc", Order = 6, TypeName = "datetime")]
        [Display(Name = "Issued utc")]
        public System.DateTime IssuedUtc { get; set; } // IssuedUtc

        [Column(@"ExpiresUtc", Order = 7, TypeName = "datetime")]
        [Display(Name = "Expires utc")]
        public System.DateTime ExpiresUtc { get; set; } // ExpiresUtc

        [Column(@"Token", Order = 8, TypeName = "varchar(max)")]
        [Display(Name = "Token")]
        public string Token { get; set; } // Token

        [Column(@"ClearedDate", Order = 9, TypeName = "datetime")]
        [Display(Name = "Cleared date")]
        public System.DateTime ClearedDate { get; set; } // ClearedDate

        public ClearedAuthToken()
        {
            ClearedDate = System.DateTime.Now;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
