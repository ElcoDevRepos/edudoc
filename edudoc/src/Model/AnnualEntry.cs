// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // AnnualEntries
    [Table("AnnualEntries", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class AnnualEntry: IEntity
    {
        // AnnualEntry

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_AnnualEntries", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Year", Order = 2, TypeName = "varchar")]
        [MaxLength(4)]
        [StringLength(4)]
        [Display(Name = "Year")]
        public string Year { get; set; } // Year (length: 4)

        [Column(@"StatusId", Order = 3, TypeName = "int")]
        [Display(Name = "Status ID")]
        public int StatusId { get; set; } // StatusId

        [Column(@"AllowableCosts", Order = 4, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Allowable costs")]
        public string AllowableCosts { get; set; } // AllowableCosts (length: 18)

        [Column(@"InterimPayments", Order = 5, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Interim payments")]
        public string InterimPayments { get; set; } // InterimPayments (length: 18)

        [Column(@"SettlementAmount", Order = 6, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Settlement amount")]
        public string SettlementAmount { get; set; } // SettlementAmount (length: 18)

        [Column(@"MER", Order = 7, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Mer")]
        public string Mer { get; set; } // MER (length: 18)

        [Column(@"RMTS", Order = 8, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Rmts")]
        public string Rmts { get; set; } // RMTS (length: 18)

        [Column(@"SchoolDistrictId", Order = 9, TypeName = "int")]
        [Display(Name = "School district ID")]
        public int SchoolDistrictId { get; set; } // SchoolDistrictId

        [Column(@"Archived", Order = 10, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        // Foreign keys

        /// <summary>
        /// Parent SchoolDistrict pointed by [AnnualEntries].([SchoolDistrictId]) (FK_AnnualEntries_SchoolDistricts)
        /// </summary>
        [InverseProperty("AnnualEntries")]
        [ForeignKey("SchoolDistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_AnnualEntries_SchoolDistricts

        /// <summary>
        /// Parent AnnualEntryStatus pointed by [AnnualEntries].([StatusId]) (FK_AnnualEntries_AnnualEntryStatuses)
        /// </summary>
        [InverseProperty("AnnualEntries")]
        [ForeignKey("StatusId")] public AnnualEntryStatus AnnualEntryStatus { get; set; } // FK_AnnualEntries_AnnualEntryStatuses

        public AnnualEntry()
        {
            Archived = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
