// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ProviderTitles
    [Table("ProviderTitles", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ProviderTitle: IEntity, IBasicNameEntity
    {
        // ProviderTitle

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ProviderTitles", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 100)

        [Column(@"Code", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Code")]
        public string Code { get; set; } // Code (length: 50)

        [Column(@"ServiceCodeId", Order = 4, TypeName = "int")]
        [Display(Name = "Service code ID")]
        public int ServiceCodeId { get; set; } // ServiceCodeId

        [Column(@"SupervisorTitleId", Order = 5, TypeName = "int")]
        [Display(Name = "Supervisor title ID")]
        public int? SupervisorTitleId { get; set; } // SupervisorTitleId

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 7, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Archived", Order = 10, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        // Reverse navigation

        /// <summary>
        /// Child CptCodeAssocations where [CPTCodeAssocations].[ProviderTitleId] point to this entity (FK_CPTCodeAssocations_ProviderTitles)
        /// </summary>
        public System.Collections.Generic.ICollection<CptCodeAssocation> CptCodeAssocations { get; set; } // CPTCodeAssocations.FK_CPTCodeAssocations_ProviderTitles
        /// <summary>
        /// Child Messages where [Messages].[ProviderTitleId] point to this entity (FK_Message_ProviderTitles)
        /// </summary>
        public System.Collections.Generic.ICollection<Message> Messages { get; set; } // Messages.FK_Message_ProviderTitles
        /// <summary>
        /// Child MessageDocuments where [MessageDocuments].[ProviderTitleId] point to this entity (FK_MessageDocument_ProviderTitles)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageDocument> MessageDocuments { get; set; } // MessageDocuments.FK_MessageDocument_ProviderTitles
        /// <summary>
        /// Child MessageLinks where [MessageLinks].[ProviderTitleId] point to this entity (FK_MessageLink_ProviderTitles)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageLink> MessageLinks { get; set; } // MessageLinks.FK_MessageLink_ProviderTitles
        /// <summary>
        /// Child Providers where [Providers].[TitleId] point to this entity (FK_Providers_ProviderTitle)
        /// </summary>
        public System.Collections.Generic.ICollection<Provider> Providers { get; set; } // Providers.FK_Providers_ProviderTitle
        /// <summary>
        /// Child ProviderTitles where [ProviderTitles].[SupervisorTitleId] point to this entity (FK_ProviderTitle_SupervisorTitle)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderTitle> ProviderTitles { get; set; } // ProviderTitles.FK_ProviderTitle_SupervisorTitle
        /// <summary>
        /// Child SchoolDistrictProviderCaseNotes where [SchoolDistrictProviderCaseNotes].[ProviderTitleId] point to this entity (FK_SchoolDistrictProviderCaseNotes_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<SchoolDistrictProviderCaseNote> SchoolDistrictProviderCaseNotes { get; set; } // SchoolDistrictProviderCaseNotes.FK_SchoolDistrictProviderCaseNotes_Providers

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [ProviderTitles].([CreatedById]) (FK_ProviderTitles_CreatedBy)
        /// </summary>
        [InverseProperty("ProviderTitles_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_ProviderTitles_CreatedBy

        /// <summary>
        /// Parent User pointed by [ProviderTitles].([ModifiedById]) (FK_ProviderTitles_ModifiedBy)
        /// </summary>
        [InverseProperty("ProviderTitles_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_ProviderTitles_ModifiedBy

        /// <summary>
        /// Parent ServiceCode pointed by [ProviderTitles].([ServiceCodeId]) (FK_ProviderTitles_ServiceCodes)
        /// </summary>
        [InverseProperty("ProviderTitles")]
        [ForeignKey("ServiceCodeId")] public ServiceCode ServiceCode { get; set; } // FK_ProviderTitles_ServiceCodes

        /// <summary>
        /// Parent ProviderTitle pointed by [ProviderTitles].([SupervisorTitleId]) (FK_ProviderTitle_SupervisorTitle)
        /// </summary>
        [InverseProperty("ProviderTitles")]
        [ForeignKey("SupervisorTitleId")] public ProviderTitle SupervisorTitle { get; set; } // FK_ProviderTitle_SupervisorTitle

        public ProviderTitle()
        {
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            Archived = false;
            Providers = new System.Collections.Generic.List<Provider>();
            ProviderTitles = new System.Collections.Generic.List<ProviderTitle>();
            MessageDocuments = new System.Collections.Generic.List<MessageDocument>();
            SchoolDistrictProviderCaseNotes = new System.Collections.Generic.List<SchoolDistrictProviderCaseNote>();
            MessageLinks = new System.Collections.Generic.List<MessageLink>();
            Messages = new System.Collections.Generic.List<Message>();
            CptCodeAssocations = new System.Collections.Generic.List<CptCodeAssocation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
