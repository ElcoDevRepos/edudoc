// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // CPTCodes
    [Table("CPTCodes", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class CptCode: IEntity
    {
        // CPTCode
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_CPTCodes", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Code", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Code")]
        public string Code { get; set; } // Code (length: 50)

        [Column(@"Description", Order = 3, TypeName = "varchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"BillAmount", Order = 4, TypeName = "decimal")]
        [Display(Name = "Bill amount")]
        public decimal BillAmount { get; set; } // BillAmount

        [Column(@"ServiceUnitRuleId", Order = 5, TypeName = "int")]
        [Display(Name = "Service unit rule ID")]
        public int? ServiceUnitRuleId { get; set; } // ServiceUnitRuleId

        [Column(@"RNDefault", Order = 6, TypeName = "bit")]
        [Display(Name = "Rnd efault")]
        public bool RnDefault { get; set; } // RNDefault

        [Column(@"LPNDefault", Order = 7, TypeName = "bit")]
        [Display(Name = "Lpnd efault")]
        public bool LpnDefault { get; set; } // LPNDefault

        [Column(@"Notes", Order = 8, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 250)

        [Column(@"Archived", Order = 9, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 10, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 11, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 12, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 13, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child BillingScheduleExcludedCptCodes where [BillingScheduleExcludedCptCodes].[CptCodeId] point to this entity (FK_BillingScheduleExcludedCptCodes_CptCode)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedCptCode> BillingScheduleExcludedCptCodes { get; set; } // BillingScheduleExcludedCptCodes.FK_BillingScheduleExcludedCptCodes_CptCode
        /// <summary>
        /// Child CaseLoadCptCodes where [CaseLoadCptCodes].[CptCodeId] point to this entity (FK_CaseLoadCptCodes_CptCode)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoadCptCode> CaseLoadCptCodes { get; set; } // CaseLoadCptCodes.FK_CaseLoadCptCodes_CptCode
        /// <summary>
        /// Child CptCodeAssocations where [CPTCodeAssocations].[CPTCodeId] point to this entity (FK_CPTCodeAssocations_CPTCodes)
        /// </summary>
        public System.Collections.Generic.ICollection<CptCodeAssocation> CptCodeAssocations { get; set; } // CPTCodeAssocations.FK_CPTCodeAssocations_CPTCodes
        /// <summary>
        /// Child EncounterStudentCptCodes where [EncounterStudentCptCodes].[CptCodeId] point to this entity (FK_EncounterStudentCptCodes_CptCode)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudentCptCode> EncounterStudentCptCodes { get; set; } // EncounterStudentCptCodes.FK_EncounterStudentCptCodes_CptCode
        /// <summary>
        /// Child ServiceUnitRules where [ServiceUnitRules].[CptCodeId] point to this entity (FK_ServiceUnitRules_CptCode)
        /// </summary>
        public System.Collections.Generic.ICollection<ServiceUnitRule> ServiceUnitRules { get; set; } // ServiceUnitRules.FK_ServiceUnitRules_CptCode

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [CPTCodes].([CreatedById]) (FK_CPTCodes_CreatedBy)
        /// </summary>
        [InverseProperty("CptCodes_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_CPTCodes_CreatedBy

        /// <summary>
        /// Parent User pointed by [CPTCodes].([ModifiedById]) (FK_CPTCodes_ModifiedBy)
        /// </summary>
        [InverseProperty("CptCodes_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_CPTCodes_ModifiedBy

        /// <summary>
        /// Parent ServiceUnitRule pointed by [CPTCodes].([ServiceUnitRuleId]) (FK_CPTCodes_ServiceUnitRule)
        /// </summary>
        [InverseProperty("CptCodes")]
        [ForeignKey("ServiceUnitRuleId")] public ServiceUnitRule ServiceUnitRule { get; set; } // FK_CPTCodes_ServiceUnitRule

        public CptCode()
        {
            RnDefault = false;
            LpnDefault = false;
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            EncounterStudentCptCodes = new System.Collections.Generic.List<EncounterStudentCptCode>();
            BillingScheduleExcludedCptCodes = new System.Collections.Generic.List<BillingScheduleExcludedCptCode>();
            ServiceUnitRules = new System.Collections.Generic.List<ServiceUnitRule>();
            CaseLoadCptCodes = new System.Collections.Generic.List<CaseLoadCptCode>();
            CptCodeAssocations = new System.Collections.Generic.List<CptCodeAssocation>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
