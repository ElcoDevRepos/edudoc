// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // RosterValidationFiles
    [Table("RosterValidationFiles", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class RosterValidationFile: IEntity, IBasicNameEntity
    {
        // RosterValidationFile
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_RosterValidationFiles", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 200)

        [Column(@"DateCreated", Order = 3, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"FilePath", Order = 4, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "File path")]
        public string FilePath { get; set; } // FilePath (length: 200)

        [Column(@"PageNumber", Order = 5, TypeName = "int")]
        [Display(Name = "Page number")]
        public int PageNumber { get; set; } // PageNumber

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"RosterValidationId", Order = 7, TypeName = "int")]
        [Display(Name = "Roster validation ID")]
        public int RosterValidationId { get; set; } // RosterValidationId

        // Reverse navigation

        /// <summary>
        /// Child RosterValidationResponseFiles where [RosterValidationResponseFiles].[RosterValidationFileId] point to this entity (FK_RosterValidationResponseFiles_RosterValidationFile)
        /// </summary>
        public System.Collections.Generic.ICollection<RosterValidationResponseFile> RosterValidationResponseFiles { get; set; } // RosterValidationResponseFiles.FK_RosterValidationResponseFiles_RosterValidationFile

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [RosterValidationFiles].([CreatedById]) (FK_RosterValidationFiles_Users)
        /// </summary>
        [InverseProperty("RosterValidationFiles")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_RosterValidationFiles_Users

        /// <summary>
        /// Parent RosterValidation pointed by [RosterValidationFiles].([RosterValidationId]) (FK_RosterValidationFiles_RosterValidation)
        /// </summary>
        [InverseProperty("RosterValidationFiles")]
        [ForeignKey("RosterValidationId")] public RosterValidation RosterValidation { get; set; } // FK_RosterValidationFiles_RosterValidation

        public RosterValidationFile()
        {
            DateCreated = System.DateTime.Now;
            PageNumber = 1;
            RosterValidationResponseFiles = new System.Collections.Generic.List<RosterValidationResponseFile>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
