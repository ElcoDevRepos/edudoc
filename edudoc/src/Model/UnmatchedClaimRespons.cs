// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // UnmatchedClaimResponses
    [Table("UnmatchedClaimResponses", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class UnmatchedClaimRespons: IEntity
    {
        // UnmatchedClaimRespons
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_UnmatchedClaimResponses", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ProcedureIdentifier", Order = 2, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Procedure identifier")]
        public string ProcedureIdentifier { get; set; } // ProcedureIdentifier (length: 50)

        [Column(@"ClaimAmount", Order = 3, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Claim amount")]
        public string ClaimAmount { get; set; } // ClaimAmount (length: 18)

        [Column(@"PaidAmount", Order = 4, TypeName = "varchar")]
        [MaxLength(18)]
        [StringLength(18)]
        [Display(Name = "Paid amount")]
        public string PaidAmount { get; set; } // PaidAmount (length: 18)

        [Column(@"ServiceDate", Order = 5, TypeName = "datetime")]
        [Display(Name = "Service date")]
        public System.DateTime ServiceDate { get; set; } // ServiceDate

        [Column(@"PatientFirstName", Order = 6, TypeName = "varchar")]
        [MaxLength(35)]
        [StringLength(35)]
        [Display(Name = "Patient first name")]
        public string PatientFirstName { get; set; } // PatientFirstName (length: 35)

        [Column(@"PatientLastName", Order = 7, TypeName = "varchar")]
        [MaxLength(60)]
        [StringLength(60)]
        [Display(Name = "Patient last name")]
        public string PatientLastName { get; set; } // PatientLastName (length: 60)

        [Column(@"PatientId", Order = 8, TypeName = "varchar")]
        [MaxLength(80)]
        [StringLength(80)]
        [Display(Name = "Patient ID")]
        public string PatientId { get; set; } // PatientId (length: 80)

        [Column(@"EdiErrorCodeId", Order = 9, TypeName = "int")]
        [Display(Name = "Edi error code ID")]
        public int? EdiErrorCodeId { get; set; } // EdiErrorCodeId

        [Column(@"DistrictId", Order = 10, TypeName = "int")]
        [Display(Name = "District ID")]
        public int? DistrictId { get; set; } // DistrictId

        [Column(@"UnmatchedDistrictId", Order = 11, TypeName = "int")]
        [Display(Name = "Unmatched district ID")]
        public int? UnmatchedDistrictId { get; set; } // UnmatchedDistrictId

        [Column(@"ResponseFileId", Order = 12, TypeName = "int")]
        [Display(Name = "Response file ID")]
        public int ResponseFileId { get; set; } // ResponseFileId

        [Column(@"ClaimId", Order = 13, TypeName = "varchar")]
        [MaxLength(25)]
        [StringLength(25)]
        [Display(Name = "Claim ID")]
        public string ClaimId { get; set; } // ClaimId (length: 25)

        [Column(@"VoucherDate", Order = 14, TypeName = "datetime")]
        [Display(Name = "Voucher date")]
        public System.DateTime? VoucherDate { get; set; } // VoucherDate

        [Column(@"ReferenceNumber", Order = 15, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Reference number")]
        public string ReferenceNumber { get; set; } // ReferenceNumber (length: 50)

        [Column(@"AdjustmentReasonCode", Order = 16, TypeName = "varchar")]
        [MaxLength(5)]
        [StringLength(5)]
        [Display(Name = "Adjustment reason code")]
        public string AdjustmentReasonCode { get; set; } // AdjustmentReasonCode (length: 5)

        [Column(@"AdjustmentAmount", Order = 17, TypeName = "varchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Adjustment amount")]
        public string AdjustmentAmount { get; set; } // AdjustmentAmount (length: 20)

        // Foreign keys

        /// <summary>
        /// Parent SchoolDistrict pointed by [UnmatchedClaimResponses].([DistrictId]) (FK_UnmatchedClaimResponses_District)
        /// </summary>
        [InverseProperty("UnmatchedClaimRespons")]
        [ForeignKey("DistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_UnmatchedClaimResponses_District

        /// <summary>
        /// Parent EdiErrorCode pointed by [UnmatchedClaimResponses].([EdiErrorCodeId]) (FK_UnmatchedClaimResponses_EdiErrorCode)
        /// </summary>
        [InverseProperty("UnmatchedClaimRespons")]
        [ForeignKey("EdiErrorCodeId")] public EdiErrorCode EdiErrorCode { get; set; } // FK_UnmatchedClaimResponses_EdiErrorCode

        /// <summary>
        /// Parent BillingResponseFile pointed by [UnmatchedClaimResponses].([ResponseFileId]) (FK_UnmatchedClaimResponses_ResponseFile)
        /// </summary>
        [InverseProperty("UnmatchedClaimRespons")]
        [ForeignKey("ResponseFileId")] public BillingResponseFile BillingResponseFile { get; set; } // FK_UnmatchedClaimResponses_ResponseFile

        /// <summary>
        /// Parent UnmatchedClaimDistrict pointed by [UnmatchedClaimResponses].([UnmatchedDistrictId]) (FK_UnmatchedClaimResponses_UnmatchedDistrict)
        /// </summary>
        [InverseProperty("UnmatchedClaimRespons")]
        [ForeignKey("UnmatchedDistrictId")] public UnmatchedClaimDistrict UnmatchedClaimDistrict { get; set; } // FK_UnmatchedClaimResponses_UnmatchedDistrict

        public UnmatchedClaimRespons()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
