// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ActivitySummaryProviders
    [Table("ActivitySummaryProviders", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ActivitySummaryProvider: IEntity
    {
        // ActivitySummaryProvider
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ActivitySummaryProviders", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ProviderId", Order = 2, TypeName = "int")]
        [Display(Name = "Provider ID")]
        public int ProviderId { get; set; } // ProviderId

        [Column(@"ProviderName", Order = 3, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Provider name")]
        public string ProviderName { get; set; } // ProviderName (length: 250)

        [Column(@"ReferralsPending", Order = 4, TypeName = "int")]
        [Display(Name = "Referrals pending")]
        public int ReferralsPending { get; set; } // ReferralsPending

        [Column(@"EncountersReturned", Order = 5, TypeName = "int")]
        [Display(Name = "Encounters returned")]
        public int EncountersReturned { get; set; } // EncountersReturned

        [Column(@"PendingSupervisorCoSign", Order = 6, TypeName = "int")]
        [Display(Name = "Pending supervisor co sign")]
        public int PendingSupervisorCoSign { get; set; } // PendingSupervisorCoSign

        [Column(@"PendingEvaluations", Order = 7, TypeName = "int")]
        [Display(Name = "Pending evaluations")]
        public int PendingEvaluations { get; set; } // PendingEvaluations

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"CreatedById", Order = 9, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"ActivitySummaryServiceAreaId", Order = 10, TypeName = "int")]
        [Display(Name = "Activity summary service area ID")]
        public int? ActivitySummaryServiceAreaId { get; set; } // ActivitySummaryServiceAreaId

        // Foreign keys

        /// <summary>
        /// Parent ActivitySummaryServiceArea pointed by [ActivitySummaryProviders].([ActivitySummaryServiceAreaId]) (FK_ActivitySummaryProviders_ActivitySummaryServiceAreas)
        /// </summary>
        [InverseProperty("ActivitySummaryProviders")]
        [ForeignKey("ActivitySummaryServiceAreaId")] public ActivitySummaryServiceArea ActivitySummaryServiceArea { get; set; } // FK_ActivitySummaryProviders_ActivitySummaryServiceAreas

        /// <summary>
        /// Parent User pointed by [ActivitySummaryProviders].([CreatedById]) (FK_ActivitySummaryProviders_Users)
        /// </summary>
        [InverseProperty("ActivitySummaryProviders")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_ActivitySummaryProviders_Users

        /// <summary>
        /// Parent Provider pointed by [ActivitySummaryProviders].([ProviderId]) (FK_ActivitySummaryProviders_Providers)
        /// </summary>
        [InverseProperty("ActivitySummaryProviders")]
        [ForeignKey("ProviderId")] public Provider Provider { get; set; } // FK_ActivitySummaryProviders_Providers

        public ActivitySummaryProvider()
        {
            ReferralsPending = 0;
            EncountersReturned = 0;
            PendingSupervisorCoSign = 0;
            PendingEvaluations = 0;
            DateCreated = System.DateTime.Now;
            CreatedById = 1;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
