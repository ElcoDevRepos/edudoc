// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // SchoolDistrictRosters
    [Table("SchoolDistrictRosters", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class SchoolDistrictRoster: IEntity
    {
        // SchoolDistrictRoster

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_SchoolDistrictRosters", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"SchoolDistrictId", Order = 2, TypeName = "int")]
        [Display(Name = "School district ID")]
        public int SchoolDistrictId { get; set; } // SchoolDistrictId

        [Column(@"FirstName", Order = 3, TypeName = "varchar(max)")]
        [Display(Name = "First name")]
        public string FirstName { get; set; } // FirstName

        [Column(@"MiddleName", Order = 4, TypeName = "varchar(max)")]
        [Display(Name = "Middle name")]
        public string MiddleName { get; set; } // MiddleName

        [Column(@"LastName", Order = 5, TypeName = "varchar(max)")]
        [Display(Name = "Last name")]
        public string LastName { get; set; } // LastName

        [Column(@"StudentCode", Order = 6, TypeName = "varchar(max)")]
        [Display(Name = "Student code")]
        public string StudentCode { get; set; } // StudentCode

        [Column(@"Grade", Order = 7, TypeName = "varchar(max)")]
        [Display(Name = "Grade")]
        public string Grade { get; set; } // Grade

        [Column(@"DateOfBirth", Order = 8, TypeName = "varchar(max)")]
        [Display(Name = "Date of birth")]
        public string DateOfBirth { get; set; } // DateOfBirth

        [Column(@"Address1", Order = 9, TypeName = "varchar(max)")]
        [Display(Name = "Address 1")]
        public string Address1 { get; set; } // Address1

        [Column(@"Address2", Order = 10, TypeName = "varchar(max)")]
        [Display(Name = "Address 2")]
        public string Address2 { get; set; } // Address2

        [Column(@"City", Order = 11, TypeName = "varchar(max)")]
        [Display(Name = "City")]
        public string City { get; set; } // City

        [Column(@"StateCode", Order = 12, TypeName = "varchar(max)")]
        [Display(Name = "State code")]
        public string StateCode { get; set; } // StateCode

        [Column(@"Zip", Order = 13, TypeName = "varchar(max)")]
        [Display(Name = "Zip")]
        public string Zip { get; set; } // Zip

        [Column(@"SchoolBuilding", Order = 14, TypeName = "varchar(max)")]
        [Display(Name = "School building")]
        public string SchoolBuilding { get; set; } // SchoolBuilding

        [Column(@"ModifiedById", Order = 15, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 16, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 17, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"SchoolDistrictRosterDocumentId", Order = 18, TypeName = "int")]
        [Display(Name = "School district roster document ID")]
        public int SchoolDistrictRosterDocumentId { get; set; } // SchoolDistrictRosterDocumentId

        [Column(@"HasDuplicates", Order = 19, TypeName = "bit")]
        [Display(Name = "Has duplicates")]
        public bool? HasDuplicates { get; set; } // HasDuplicates

        [Column(@"HasDataIssues", Order = 20, TypeName = "bit")]
        [Display(Name = "Has data issues")]
        public bool? HasDataIssues { get; set; } // HasDataIssues

        [Column(@"Archived", Order = 21, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"StudentId", Order = 22, TypeName = "int")]
        [Display(Name = "Student ID")]
        public int? StudentId { get; set; } // StudentId

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [SchoolDistrictRosters].([ModifiedById]) (FK_SchoolDistrictRosters_ModifiedBy)
        /// </summary>
        [InverseProperty("SchoolDistrictRosters")]
        [ForeignKey("ModifiedById")] public User User { get; set; } // FK_SchoolDistrictRosters_ModifiedBy

        /// <summary>
        /// Parent SchoolDistrict pointed by [SchoolDistrictRosters].([SchoolDistrictId]) (FK_SchoolDistrictRosters_SchoolDistricts)
        /// </summary>
        [InverseProperty("SchoolDistrictRosters")]
        [ForeignKey("SchoolDistrictId")] public SchoolDistrict SchoolDistrict { get; set; } // FK_SchoolDistrictRosters_SchoolDistricts

        /// <summary>
        /// Parent SchoolDistrictRosterDocument pointed by [SchoolDistrictRosters].([SchoolDistrictRosterDocumentId]) (FK_SchoolDistrictRosters_SchoolDistrictRosterDocuments)
        /// </summary>
        [InverseProperty("SchoolDistrictRosters")]
        [ForeignKey("SchoolDistrictRosterDocumentId")] public SchoolDistrictRosterDocument SchoolDistrictRosterDocument { get; set; } // FK_SchoolDistrictRosters_SchoolDistrictRosterDocuments

        /// <summary>
        /// Parent Student pointed by [SchoolDistrictRosters].([StudentId]) (FK_SchoolDistrictRosters_Students)
        /// </summary>
        [InverseProperty("SchoolDistrictRosters")]
        [ForeignKey("StudentId")] public Student Student { get; set; } // FK_SchoolDistrictRosters_Students

        public SchoolDistrictRoster()
        {
            DateCreated = System.DateTime.UtcNow;
            HasDuplicates = false;
            HasDataIssues = false;
            Archived = false;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
