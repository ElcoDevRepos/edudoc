// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // ActivitySummaryServiceAreas
    [Table("ActivitySummaryServiceAreas", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class ActivitySummaryServiceArea: IEntity
    {
        // ActivitySummaryServiceArea
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_ActivitySummaryServiceAreas", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ServiceAreaId", Order = 2, TypeName = "int")]
        [Display(Name = "Service area ID")]
        public int ServiceAreaId { get; set; } // ServiceAreaId

        [Column(@"ReferralsPending", Order = 3, TypeName = "int")]
        [Display(Name = "Referrals pending")]
        public int ReferralsPending { get; set; } // ReferralsPending

        [Column(@"EncountersReturned", Order = 4, TypeName = "int")]
        [Display(Name = "Encounters returned")]
        public int EncountersReturned { get; set; } // EncountersReturned

        [Column(@"PendingSupervisorCoSign", Order = 5, TypeName = "int")]
        [Display(Name = "Pending supervisor co sign")]
        public int PendingSupervisorCoSign { get; set; } // PendingSupervisorCoSign

        [Column(@"PendingEvaluations", Order = 6, TypeName = "int")]
        [Display(Name = "Pending evaluations")]
        public int PendingEvaluations { get; set; } // PendingEvaluations

        [Column(@"OpenScheduledEncounters", Order = 7, TypeName = "int")]
        [Display(Name = "Open scheduled encounters")]
        public int OpenScheduledEncounters { get; set; } // OpenScheduledEncounters

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"CreatedById", Order = 9, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"ActivitySummaryDistrictId", Order = 10, TypeName = "int")]
        [Display(Name = "Activity summary district ID")]
        public int? ActivitySummaryDistrictId { get; set; } // ActivitySummaryDistrictId

        // Reverse navigation

        /// <summary>
        /// Child ActivitySummaryProviders where [ActivitySummaryProviders].[ActivitySummaryServiceAreaId] point to this entity (FK_ActivitySummaryProviders_ActivitySummaryServiceAreas)
        /// </summary>
        public System.Collections.Generic.ICollection<ActivitySummaryProvider> ActivitySummaryProviders { get; set; } // ActivitySummaryProviders.FK_ActivitySummaryProviders_ActivitySummaryServiceAreas

        // Foreign keys

        /// <summary>
        /// Parent ActivitySummaryDistrict pointed by [ActivitySummaryServiceAreas].([ActivitySummaryDistrictId]) (FK_ActivitySummaryServiceAreas_ActivitySummaryDistricts)
        /// </summary>
        [InverseProperty("ActivitySummaryServiceAreas")]
        [ForeignKey("ActivitySummaryDistrictId")] public ActivitySummaryDistrict ActivitySummaryDistrict { get; set; } // FK_ActivitySummaryServiceAreas_ActivitySummaryDistricts

        /// <summary>
        /// Parent User pointed by [ActivitySummaryServiceAreas].([CreatedById]) (FK_ActivitySummaryServiceAreas_Users)
        /// </summary>
        [InverseProperty("ActivitySummaryServiceAreas")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_ActivitySummaryServiceAreas_Users

        /// <summary>
        /// Parent ServiceCode pointed by [ActivitySummaryServiceAreas].([ServiceAreaId]) (FK_ActivitySummaryServiceAreas_ServiceCodes)
        /// </summary>
        [InverseProperty("ActivitySummaryServiceAreas")]
        [ForeignKey("ServiceAreaId")] public ServiceCode ServiceCode { get; set; } // FK_ActivitySummaryServiceAreas_ServiceCodes

        public ActivitySummaryServiceArea()
        {
            ReferralsPending = 0;
            EncountersReturned = 0;
            PendingSupervisorCoSign = 0;
            PendingEvaluations = 0;
            OpenScheduledEncounters = 0;
            DateCreated = System.DateTime.Now;
            CreatedById = 1;
            ActivitySummaryProviders = new System.Collections.Generic.List<ActivitySummaryProvider>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
