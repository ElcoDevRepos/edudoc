// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // BillingFiles
    [Table("BillingFiles", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class BillingFile: IEntity, IBasicNameEntity
    {
        // BillingFile
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_BillingFiles", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 200)

        [Column(@"DateCreated", Order = 3, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime DateCreated { get; set; } // DateCreated

        [Column(@"FilePath", Order = 4, TypeName = "varchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "File path")]
        public string FilePath { get; set; } // FilePath (length: 200)

        [Column(@"ClaimsCount", Order = 5, TypeName = "int")]
        [Display(Name = "Claims count")]
        public int? ClaimsCount { get; set; } // ClaimsCount

        [Column(@"PageNumber", Order = 6, TypeName = "int")]
        [Display(Name = "Page number")]
        public int PageNumber { get; set; } // PageNumber

        [Column(@"CreatedById", Order = 7, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int? CreatedById { get; set; } // CreatedById

        [Column(@"HealthCareClaimId", Order = 8, TypeName = "int")]
        [Display(Name = "Health care claim ID")]
        public int HealthCareClaimId { get; set; } // HealthCareClaimId

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [BillingFiles].([CreatedById]) (FK_BillingFiles_Users)
        /// </summary>
        [InverseProperty("BillingFiles")]
        [ForeignKey("CreatedById")] public User User { get; set; } // FK_BillingFiles_Users

        /// <summary>
        /// Parent HealthCareClaim pointed by [BillingFiles].([HealthCareClaimId]) (FK_BillingFiles_HealthCareClaim)
        /// </summary>
        [InverseProperty("BillingFiles")]
        [ForeignKey("HealthCareClaimId")] public HealthCareClaim HealthCareClaim { get; set; } // FK_BillingFiles_HealthCareClaim

        public BillingFile()
        {
            DateCreated = System.DateTime.Now;
            PageNumber = 1;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
