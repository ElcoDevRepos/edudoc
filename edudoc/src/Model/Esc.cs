// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // Escs
    [Table("Escs", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class Esc: IEntity, IBasicNameEntity
    {
        // Esc

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Escs", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"Name", Order = 2, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Name")]
        public string Name { get; set; } // Name (length: 250)

        [Column(@"Code", Order = 3, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Code")]
        public string Code { get; set; } // Code (length: 50)

        [Column(@"Notes", Order = 4, TypeName = "varchar")]
        [MaxLength(1000)]
        [StringLength(1000)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 1000)

        [Column(@"CreatedById", Order = 5, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 6, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 7, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Archived", Order = 9, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"AddressId", Order = 10, TypeName = "int")]
        [Display(Name = "Address ID")]
        public int? AddressId { get; set; } // AddressId

        // Reverse navigation

        /// <summary>
        /// Child EscSchoolDistricts where [EscSchoolDistricts].[EscId] point to this entity (FK_EscSchoolDistrict_Esc)
        /// </summary>
        public System.Collections.Generic.ICollection<EscSchoolDistrict> EscSchoolDistricts { get; set; } // EscSchoolDistricts.FK_EscSchoolDistrict_Esc
        /// <summary>
        /// Child Messages where [Messages].[EscId] point to this entity (FK_Message_Escs)
        /// </summary>
        public System.Collections.Generic.ICollection<Message> Messages { get; set; } // Messages.FK_Message_Escs
        /// <summary>
        /// Child MessageDocuments where [MessageDocuments].[EscId] point to this entity (FK_MessageDocument_Escs)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageDocument> MessageDocuments { get; set; } // MessageDocuments.FK_MessageDocument_Escs
        /// <summary>
        /// Child MessageLinks where [MessageLinks].[EscId] point to this entity (FK_MessageLink_Escs)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageLink> MessageLinks { get; set; } // MessageLinks.FK_MessageLink_Escs
        /// <summary>
        /// Child ProviderEscAssignments where [ProviderEscAssignments].[EscId] point to this entity (FK_ProviderEscs_Esc)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderEscAssignment> ProviderEscAssignments { get; set; } // ProviderEscAssignments.FK_ProviderEscs_Esc
        /// <summary>
        /// Child Students where [Students].[EscId] point to this entity (FK_Students_Esc)
        /// </summary>
        public System.Collections.Generic.ICollection<Student> Students { get; set; } // Students.FK_Students_Esc

        // Foreign keys

        /// <summary>
        /// Parent Address pointed by [Escs].([AddressId]) (FK_Escs_Addresses)
        /// </summary>
        [InverseProperty("Escs")]
        [ForeignKey("AddressId")] public Address Address { get; set; } // FK_Escs_Addresses

        /// <summary>
        /// Parent User pointed by [Escs].([CreatedById]) (FK_Escs_CreatedBy)
        /// </summary>
        [InverseProperty("Escs_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_Escs_CreatedBy

        /// <summary>
        /// Parent User pointed by [Escs].([ModifiedById]) (FK_Escs_ModifiedBy)
        /// </summary>
        [InverseProperty("Escs_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_Escs_ModifiedBy

        public Esc()
        {
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            Archived = false;
            MessageDocuments = new System.Collections.Generic.List<MessageDocument>();
            MessageLinks = new System.Collections.Generic.List<MessageLink>();
            EscSchoolDistricts = new System.Collections.Generic.List<EscSchoolDistrict>();
            Students = new System.Collections.Generic.List<Student>();
            Messages = new System.Collections.Generic.List<Message>();
            ProviderEscAssignments = new System.Collections.Generic.List<ProviderEscAssignment>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
