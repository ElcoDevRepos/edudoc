// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // CaseLoads
    [Table("CaseLoads", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class CaseLoad: IEntity
    {
        // CaseLoad

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_CaseLoads", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"StudentTypeId", Order = 2, TypeName = "int")]
        [Display(Name = "Student type ID")]
        public int StudentTypeId { get; set; } // StudentTypeId

        [Column(@"ServiceCodeId", Order = 3, TypeName = "int")]
        [Index(@"IX_CaseLoads_ServiceCodeId", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IX_CaseLoads_ServiceCodeId_StudentId", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Service code ID")]
        public int? ServiceCodeId { get; set; } // ServiceCodeId

        [Column(@"StudentId", Order = 4, TypeName = "int")]
        [Index(@"IX_CaseLoads_1", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IX_CaseLoads_ServiceCodeId_StudentId", 2, IsUnique = false, IsClustered = false)]
        [Display(Name = "Student ID")]
        public int StudentId { get; set; } // StudentId

        [Column(@"DiagnosisCodeId", Order = 5, TypeName = "int")]
        [Display(Name = "Diagnosis code ID")]
        public int? DiagnosisCodeId { get; set; } // DiagnosisCodeId

        [Column(@"DisabilityCodeId", Order = 6, TypeName = "int")]
        [Display(Name = "Disability code ID")]
        public int? DisabilityCodeId { get; set; } // DisabilityCodeId

        [Column(@"IEPStartDate", Order = 7, TypeName = "datetime")]
        [Display(Name = "Ieps tart date")]
        public System.DateTime? IepStartDate { get; set; } // IEPStartDate

        [Column(@"IEPEndDate", Order = 8, TypeName = "datetime")]
        [Display(Name = "Iepe nd date")]
        public System.DateTime? IepEndDate { get; set; } // IEPEndDate

        [Column(@"Archived", Order = 9, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 10, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 11, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 12, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 13, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Reverse navigation

        /// <summary>
        /// Child CaseLoadCptCodes where [CaseLoadCptCodes].[CaseLoadId] point to this entity (FK_CaseLoadCptCodes_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoadCptCode> CaseLoadCptCodes { get; set; } // CaseLoadCptCodes.FK_CaseLoadCptCodes_CaseLoad
        /// <summary>
        /// Child CaseLoadGoals where [CaseLoadGoals].[CaseLoadId] point to this entity (FK_CaseLoadGoals_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoadGoal> CaseLoadGoals { get; set; } // CaseLoadGoals.FK_CaseLoadGoals_CaseLoad
        /// <summary>
        /// Child CaseLoadMethods where [CaseLoadMethods].[CaseLoadId] point to this entity (FK_CaseLoadMethods_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoadMethod> CaseLoadMethods { get; set; } // CaseLoadMethods.FK_CaseLoadMethods_CaseLoad
        /// <summary>
        /// Child CaseLoadScripts where [CaseLoadScripts].[CaseLoadId] point to this entity (FK_CaseLoadScripts_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<CaseLoadScript> CaseLoadScripts { get; set; } // CaseLoadScripts.FK_CaseLoadScripts_CaseLoad
        /// <summary>
        /// Child EncounterStudents where [EncounterStudents].[CaseLoadId] point to this entity (FK_EncounterStudents_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<EncounterStudent> EncounterStudents { get; set; } // EncounterStudents.FK_EncounterStudents_CaseLoad
        /// <summary>
        /// Child StudentTherapies where [StudentTherapies].[CaseLoadId] point to this entity (FK_StudentTherapies_CaseLoad)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentTherapy> StudentTherapies { get; set; } // StudentTherapies.FK_StudentTherapies_CaseLoad

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [CaseLoads].([CreatedById]) (FK_CaseLoads_CreatedBy)
        /// </summary>
        [InverseProperty("CaseLoads_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_CaseLoads_CreatedBy

        /// <summary>
        /// Parent DiagnosisCode pointed by [CaseLoads].([DiagnosisCodeId]) (FK_CaseLoads_DiagnosisCodes)
        /// </summary>
        [InverseProperty("CaseLoads")]
        [ForeignKey("DiagnosisCodeId")] public DiagnosisCode DiagnosisCode { get; set; } // FK_CaseLoads_DiagnosisCodes

        /// <summary>
        /// Parent DisabilityCode pointed by [CaseLoads].([DisabilityCodeId]) (FK_CaseLoads_DisabilityCodes)
        /// </summary>
        [InverseProperty("CaseLoads")]
        [ForeignKey("DisabilityCodeId")] public DisabilityCode DisabilityCode { get; set; } // FK_CaseLoads_DisabilityCodes

        /// <summary>
        /// Parent User pointed by [CaseLoads].([ModifiedById]) (FK_CaseLoads_ModifiedBy)
        /// </summary>
        [InverseProperty("CaseLoads_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_CaseLoads_ModifiedBy

        /// <summary>
        /// Parent ServiceCode pointed by [CaseLoads].([ServiceCodeId]) (FK_CaseLoads_ServiceCode)
        /// </summary>
        [InverseProperty("CaseLoads")]
        [ForeignKey("ServiceCodeId")] public ServiceCode ServiceCode { get; set; } // FK_CaseLoads_ServiceCode

        /// <summary>
        /// Parent Student pointed by [CaseLoads].([StudentId]) (FK_CaseLoads_Student)
        /// </summary>
        [InverseProperty("CaseLoads")]
        [ForeignKey("StudentId")] public Student Student { get; set; } // FK_CaseLoads_Student

        /// <summary>
        /// Parent StudentType pointed by [CaseLoads].([StudentTypeId]) (FK_CaseLoads_StudentType)
        /// </summary>
        [InverseProperty("CaseLoads")]
        [ForeignKey("StudentTypeId")] public StudentType StudentType { get; set; } // FK_CaseLoads_StudentType

        public CaseLoad()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            EncounterStudents = new System.Collections.Generic.List<EncounterStudent>();
            CaseLoadMethods = new System.Collections.Generic.List<CaseLoadMethod>();
            CaseLoadGoals = new System.Collections.Generic.List<CaseLoadGoal>();
            StudentTherapies = new System.Collections.Generic.List<StudentTherapy>();
            CaseLoadCptCodes = new System.Collections.Generic.List<CaseLoadCptCode>();
            CaseLoadScripts = new System.Collections.Generic.List<CaseLoadScript>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
