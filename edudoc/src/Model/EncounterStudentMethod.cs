// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // EncounterStudentMethods
    [Table("EncounterStudentMethods", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class EncounterStudentMethod: IEntity
    {
        // EncounterStudentMethod
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_EncounterStudentMethods", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"EncounterStudentId", Order = 2, TypeName = "int")]
        [Index(@"IX_EncounterStudentMethods_EncounterStudentId_Archived", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Encounter student ID")]
        public int EncounterStudentId { get; set; } // EncounterStudentId

        [Column(@"MethodId", Order = 3, TypeName = "int")]
        [Display(Name = "Method ID")]
        public int MethodId { get; set; } // MethodId

        [Column(@"Archived", Order = 4, TypeName = "bit")]
        [Index(@"IX_EncounterStudentMethods_EncounterStudentId_Archived", 2, IsUnique = false, IsClustered = false)]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"CreatedById", Order = 5, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 6, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 7, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [EncounterStudentMethods].([CreatedById]) (FK_EncounterStudentMethods_CreatedBy)
        /// </summary>
        [InverseProperty("EncounterStudentMethods_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_EncounterStudentMethods_CreatedBy

        /// <summary>
        /// Parent EncounterStudent pointed by [EncounterStudentMethods].([EncounterStudentId]) (FK_EncounterStudentMethods_EncounterStudent)
        /// </summary>
        [InverseProperty("EncounterStudentMethods")]
        [ForeignKey("EncounterStudentId")] public EncounterStudent EncounterStudent { get; set; } // FK_EncounterStudentMethods_EncounterStudent

        /// <summary>
        /// Parent Method pointed by [EncounterStudentMethods].([MethodId]) (FK_EncounterStudentMethods_Method)
        /// </summary>
        [InverseProperty("EncounterStudentMethods")]
        [ForeignKey("MethodId")] public Method Method { get; set; } // FK_EncounterStudentMethods_Method

        /// <summary>
        /// Parent User pointed by [EncounterStudentMethods].([ModifiedById]) (FK_EncounterStudentMethods_ModifiedBy)
        /// </summary>
        [InverseProperty("EncounterStudentMethods_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_EncounterStudentMethods_ModifiedBy

        public EncounterStudentMethod()
        {
            Archived = false;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
