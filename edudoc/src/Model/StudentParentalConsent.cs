// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // StudentParentalConsents
    [Table("StudentParentalConsents", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class StudentParentalConsent: IEntity
    {
        // StudentParentalConsent
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_StudentParentalConsents", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"StudentId", Order = 2, TypeName = "int")]
        [Display(Name = "Student ID")]
        public int StudentId { get; set; } // StudentId

        [Column(@"ParentalConsentEffectiveDate", Order = 3, TypeName = "datetime")]
        [Display(Name = "Parental consent effective date")]
        public System.DateTime? ParentalConsentEffectiveDate { get; set; } // ParentalConsentEffectiveDate

        [Column(@"ParentalConsentDateEntered", Order = 4, TypeName = "datetime")]
        [Display(Name = "Parental consent date entered")]
        public System.DateTime ParentalConsentDateEntered { get; set; } // ParentalConsentDateEntered

        [Column(@"ParentalConsentTypeId", Order = 5, TypeName = "int")]
        [Display(Name = "Parental consent type ID")]
        public int ParentalConsentTypeId { get; set; } // ParentalConsentTypeId

        [Column(@"CreatedById", Order = 6, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 7, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 8, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 9, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [StudentParentalConsents].([CreatedById]) (FK_StudentParentalConsents_CreatedBy)
        /// </summary>
        [InverseProperty("StudentParentalConsents_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_StudentParentalConsents_CreatedBy

        /// <summary>
        /// Parent User pointed by [StudentParentalConsents].([ModifiedById]) (FK_StudentParentalConsents_ModifiedBy)
        /// </summary>
        [InverseProperty("StudentParentalConsents_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_StudentParentalConsents_ModifiedBy

        /// <summary>
        /// Parent StudentParentalConsentType pointed by [StudentParentalConsents].([ParentalConsentTypeId]) (FK_StudentParentalConsents_StudentParentalConsentType)
        /// </summary>
        [InverseProperty("StudentParentalConsents")]
        [ForeignKey("ParentalConsentTypeId")] public StudentParentalConsentType StudentParentalConsentType { get; set; } // FK_StudentParentalConsents_StudentParentalConsentType

        /// <summary>
        /// Parent Student pointed by [StudentParentalConsents].([StudentId]) (FK_StudentParentalConsents_Student)
        /// </summary>
        [InverseProperty("StudentParentalConsents")]
        [ForeignKey("StudentId")] public Student Student { get; set; } // FK_StudentParentalConsents_Student

        public StudentParentalConsent()
        {
            ParentalConsentDateEntered = System.DateTime.UtcNow;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
