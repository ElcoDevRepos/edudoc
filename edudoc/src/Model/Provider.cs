// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Model
{
    using Newtonsoft.Json;
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.Data.SqlClient;
    using TrackerEnabledDbContext;

    // Providers
    [Table("Providers", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.0.0")]
    public partial class Provider: IEntity
    {
        // Provider

        ///<summary>
        /// Module
        ///</summary>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Index(@"PK_Providers", 1, IsUnique = true, IsClustered = true)]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Column(@"ProviderUserId", Order = 2, TypeName = "int")]
        [Index(@"IX_Providers", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "Provider user ID")]
        public int ProviderUserId { get; set; } // ProviderUserId

        [Column(@"TitleId", Order = 3, TypeName = "int")]
        [Display(Name = "Title ID")]
        public int TitleId { get; set; } // TitleId

        [Column(@"VerifiedORP", Order = 4, TypeName = "bit")]
        [Display(Name = "Verified orp")]
        public bool VerifiedOrp { get; set; } // VerifiedORP

        [Column(@"ORPApprovalRequestDate", Order = 5, TypeName = "datetime")]
        [Display(Name = "Orpa pproval request date")]
        public System.DateTime? OrpApprovalRequestDate { get; set; } // ORPApprovalRequestDate

        [Column(@"ORPApprovalDate", Order = 6, TypeName = "datetime")]
        [Display(Name = "Orpa pproval date")]
        public System.DateTime? OrpApprovalDate { get; set; } // ORPApprovalDate

        [Column(@"ORPDenialDate", Order = 7, TypeName = "datetime")]
        [Display(Name = "Orpd enial date")]
        public System.DateTime? OrpDenialDate { get; set; } // ORPDenialDate

        [Column(@"NPI", Order = 8, TypeName = "varchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Npi")]
        public string Npi { get; set; } // NPI (length: 10)

        [Column(@"Phone", Order = 9, TypeName = "varchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Phone]
        [Display(Name = "Phone")]
        public string Phone { get; set; } // Phone (length: 50)

        [Column(@"ProviderEmploymentTypeId", Order = 10, TypeName = "int")]
        [Display(Name = "Provider employment type ID")]
        public int ProviderEmploymentTypeId { get; set; } // ProviderEmploymentTypeId

        [Column(@"Notes", Order = 11, TypeName = "varchar")]
        [MaxLength(2000)]
        [StringLength(2000)]
        [Display(Name = "Notes")]
        public string Notes { get; set; } // Notes (length: 2000)

        [Column(@"DocumentationDate", Order = 12, TypeName = "datetime")]
        [Display(Name = "Documentation date")]
        public System.DateTime? DocumentationDate { get; set; } // DocumentationDate

        [Column(@"CreatedById", Order = 13, TypeName = "int")]
        [Display(Name = "Created by ID")]
        public int CreatedById { get; set; } // CreatedById

        [Column(@"ModifiedById", Order = 14, TypeName = "int")]
        [Display(Name = "Modified by ID")]
        public int? ModifiedById { get; set; } // ModifiedById

        [Column(@"DateCreated", Order = 15, TypeName = "datetime")]
        [Display(Name = "Date created")]
        public System.DateTime? DateCreated { get; set; } // DateCreated

        [Column(@"DateModified", Order = 16, TypeName = "datetime")]
        [Display(Name = "Date modified")]
        public System.DateTime? DateModified { get; set; } // DateModified

        [Column(@"Archived", Order = 17, TypeName = "bit")]
        [Display(Name = "Archived")]
        public bool Archived { get; set; } // Archived

        [Column(@"BlockedReason", Order = 18, TypeName = "varchar")]
        [MaxLength(250)]
        [StringLength(250)]
        [Display(Name = "Blocked reason")]
        public string BlockedReason { get; set; } // BlockedReason (length: 250)

        [Column(@"DoNotBillReasonId", Order = 19, TypeName = "int")]
        [Display(Name = "Do not bill reason ID")]
        public int? DoNotBillReasonId { get; set; } // DoNotBillReasonId

        // Reverse navigation

        /// <summary>
        /// Child ActivitySummaryProviders where [ActivitySummaryProviders].[ProviderId] point to this entity (FK_ActivitySummaryProviders_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ActivitySummaryProvider> ActivitySummaryProviders { get; set; } // ActivitySummaryProviders.FK_ActivitySummaryProviders_Providers
        /// <summary>
        /// Child BillingScheduleExcludedProviders where [BillingScheduleExcludedProviders].[ProviderId] point to this entity (FK_BillingScheduleExcludedProviders_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<BillingScheduleExcludedProvider> BillingScheduleExcludedProviders { get; set; } // BillingScheduleExcludedProviders.FK_BillingScheduleExcludedProviders_Provider
        /// <summary>
        /// Child Encounters where [Encounters].[ProviderId] point to this entity (FK_Encounters_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<Encounter> Encounters { get; set; } // Encounters.FK_Encounters_Provider
        /// <summary>
        /// Child Messages where [Messages].[ProviderId] point to this entity (FK_Message_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<Message> Messages { get; set; } // Messages.FK_Message_Providers
        /// <summary>
        /// Child MessageDocuments where [MessageDocuments].[ProviderId] point to this entity (FK_MessageDocument_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageDocument> MessageDocuments { get; set; } // MessageDocuments.FK_MessageDocument_Providers
        /// <summary>
        /// Child MessageLinks where [MessageLinks].[ProviderId] point to this entity (FK_MessageLink_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<MessageLink> MessageLinks { get; set; } // MessageLinks.FK_MessageLink_Providers
        /// <summary>
        /// Child MigrationProviderCaseNotesHistories where [Migration_ProviderCaseNotesHistory].[ProviderId] point to this entity (FK_Migration_ProviderCaseNotesHistory_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<MigrationProviderCaseNotesHistory> MigrationProviderCaseNotesHistories { get; set; } // Migration_ProviderCaseNotesHistory.FK_Migration_ProviderCaseNotesHistory_Provider
        /// <summary>
        /// Child PendingReferrals where [PendingReferrals].[ProviderId] point to this entity (FK_PendingReferrals_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<PendingReferral> PendingReferrals { get; set; } // PendingReferrals.FK_PendingReferrals_Providers
        /// <summary>
        /// Child ProviderAcknowledgmentLogs where [ProviderAcknowledgmentLogs].[ProviderId] point to this entity (FK_ProviderAcknowledgmentLogs_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderAcknowledgmentLog> ProviderAcknowledgmentLogs { get; set; } // ProviderAcknowledgmentLogs.FK_ProviderAcknowledgmentLogs_Providers
        /// <summary>
        /// Child ProviderCaseUploads where [ProviderCaseUploads].[ProviderId] point to this entity (FK_ProviderCaseUploads_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderCaseUpload> ProviderCaseUploads { get; set; } // ProviderCaseUploads.FK_ProviderCaseUploads_Providers
        /// <summary>
        /// Child ProviderEscAssignments where [ProviderEscAssignments].[ProviderId] point to this entity (FK_ProviderEscs_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderEscAssignment> ProviderEscAssignments { get; set; } // ProviderEscAssignments.FK_ProviderEscs_Providers
        /// <summary>
        /// Child ProviderInactivityDates where [ProviderInactivityDates].[ProviderId] point to this entity (FK_ProviderInactivityDates_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderInactivityDate> ProviderInactivityDates { get; set; } // ProviderInactivityDates.FK_ProviderInactivityDates_Providers
        /// <summary>
        /// Child ProviderLicens where [ProviderLicenses].[ProviderId] point to this entity (FK_ProviderLicenses_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderLicens> ProviderLicens { get; set; } // ProviderLicenses.FK_ProviderLicenses_Providers
        /// <summary>
        /// Child ProviderOdeCertifications where [ProviderODECertifications].[ProviderId] point to this entity (FK_ProviderODECertifiactions_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderOdeCertification> ProviderOdeCertifications { get; set; } // ProviderODECertifications.FK_ProviderODECertifiactions_Providers
        /// <summary>
        /// Child ProviderStudents where [ProviderStudents].[ProviderId] point to this entity (FK_ProviderStudents_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderStudent> ProviderStudents { get; set; } // ProviderStudents.FK_ProviderStudents_Providers
        /// <summary>
        /// Child ProviderStudentHistories where [ProviderStudentHistories].[ProviderId] point to this entity (FK_ProviderStudentHistories_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderStudentHistory> ProviderStudentHistories { get; set; } // ProviderStudentHistories.FK_ProviderStudentHistories_Providers
        /// <summary>
        /// Child ProviderStudentSupervisors where [ProviderStudentSupervisors].[AssistantId] point to this entity (FK_ProviderStudentSupervisors_Assistant)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderStudentSupervisor> ProviderStudentSupervisors_AssistantId { get; set; } // ProviderStudentSupervisors.FK_ProviderStudentSupervisors_Assistant
        /// <summary>
        /// Child ProviderStudentSupervisors where [ProviderStudentSupervisors].[SupervisorId] point to this entity (FK_ProviderStudentSupervisors_Supervisor)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderStudentSupervisor> ProviderStudentSupervisors_SupervisorId { get; set; } // ProviderStudentSupervisors.FK_ProviderStudentSupervisors_Supervisor
        /// <summary>
        /// Child ProviderTrainings where [ProviderTrainings].[ProviderId] point to this entity (FK_ProviderTrainings_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<ProviderTraining> ProviderTrainings { get; set; } // ProviderTrainings.FK_ProviderTrainings_Provider
        /// <summary>
        /// Child RevokeAccesses where [RevokeAccess].[ProviderId] point to this entity (FK_RevokeAccess_Providers)
        /// </summary>
        public System.Collections.Generic.ICollection<RevokeAccess> RevokeAccesses { get; set; } // RevokeAccess.FK_RevokeAccess_Providers
        /// <summary>
        /// Child StudentTherapies where [StudentTherapies].[ProviderId] point to this entity (FK_StudentTherapies_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<StudentTherapy> StudentTherapies { get; set; } // StudentTherapies.FK_StudentTherapies_Provider
        /// <summary>
        /// Child SupervisorProviderStudentReferalSignOffs where [SupervisorProviderStudentReferalSignOffs].[SupervisorId] point to this entity (FK_SupervisorProviderStudentReferalSignOff_Supervisor)
        /// </summary>
        public System.Collections.Generic.ICollection<SupervisorProviderStudentReferalSignOff> SupervisorProviderStudentReferalSignOffs { get; set; } // SupervisorProviderStudentReferalSignOffs.FK_SupervisorProviderStudentReferalSignOff_Supervisor
        /// <summary>
        /// Child TherapyCaseNotes where [TherapyCaseNotes].[ProviderId] point to this entity (FK_TherapyCaseNotes_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<TherapyCaseNote> TherapyCaseNotes { get; set; } // TherapyCaseNotes.FK_TherapyCaseNotes_Provider
        /// <summary>
        /// Child TherapyGroups where [TherapyGroups].[ProviderId] point to this entity (FK_TherapyGroups_Provider)
        /// </summary>
        public System.Collections.Generic.ICollection<TherapyGroup> TherapyGroups { get; set; } // TherapyGroups.FK_TherapyGroups_Provider

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [Providers].([CreatedById]) (FK_Providers_CreatedBy)
        /// </summary>
        [InverseProperty("Providers_CreatedById")]
        [ForeignKey("CreatedById")] public User CreatedBy { get; set; } // FK_Providers_CreatedBy

        /// <summary>
        /// Parent ProviderDoNotBillReason pointed by [Providers].([DoNotBillReasonId]) (FK_Providers_DoNotBillReason)
        /// </summary>
        [InverseProperty("Providers")]
        [ForeignKey("DoNotBillReasonId")] public ProviderDoNotBillReason ProviderDoNotBillReason { get; set; } // FK_Providers_DoNotBillReason

        /// <summary>
        /// Parent User pointed by [Providers].([ModifiedById]) (FK_Providers_ModifiedBy)
        /// </summary>
        [InverseProperty("Providers_ModifiedById")]
        [ForeignKey("ModifiedById")] public User ModifiedBy { get; set; } // FK_Providers_ModifiedBy

        /// <summary>
        /// Parent ProviderEmploymentType pointed by [Providers].([ProviderEmploymentTypeId]) (FK_Providers_ProviderEmploymentTypes)
        /// </summary>
        [InverseProperty("Providers")]
        [ForeignKey("ProviderEmploymentTypeId")] public ProviderEmploymentType ProviderEmploymentType { get; set; } // FK_Providers_ProviderEmploymentTypes

        /// <summary>
        /// Parent User pointed by [Providers].([ProviderUserId]) (FK_Providers_ProviderUser)
        /// </summary>
        [InverseProperty("Providers_ProviderUserId")]
        [ForeignKey("ProviderUserId")] public User ProviderUser { get; set; } // FK_Providers_ProviderUser

        /// <summary>
        /// Parent ProviderTitle pointed by [Providers].([TitleId]) (FK_Providers_ProviderTitle)
        /// </summary>
        [InverseProperty("Providers")]
        [ForeignKey("TitleId")] public ProviderTitle ProviderTitle { get; set; } // FK_Providers_ProviderTitle

        public Provider()
        {
            VerifiedOrp = false;
            Phone = "(0)-(0))-(0";
            DocumentationDate = System.DateTime.UtcNow;
            CreatedById = 1;
            DateCreated = System.DateTime.UtcNow;
            Archived = false;
            ProviderLicens = new System.Collections.Generic.List<ProviderLicens>();
            ProviderOdeCertifications = new System.Collections.Generic.List<ProviderOdeCertification>();
            ProviderStudents = new System.Collections.Generic.List<ProviderStudent>();
            Encounters = new System.Collections.Generic.List<Encounter>();
            ProviderStudentSupervisors_AssistantId = new System.Collections.Generic.List<ProviderStudentSupervisor>();
            ProviderStudentSupervisors_SupervisorId = new System.Collections.Generic.List<ProviderStudentSupervisor>();
            ProviderTrainings = new System.Collections.Generic.List<ProviderTraining>();
            RevokeAccesses = new System.Collections.Generic.List<RevokeAccess>();
            ActivitySummaryProviders = new System.Collections.Generic.List<ActivitySummaryProvider>();
            MessageDocuments = new System.Collections.Generic.List<MessageDocument>();
            MessageLinks = new System.Collections.Generic.List<MessageLink>();
            ProviderStudentHistories = new System.Collections.Generic.List<ProviderStudentHistory>();
            BillingScheduleExcludedProviders = new System.Collections.Generic.List<BillingScheduleExcludedProvider>();
            StudentTherapies = new System.Collections.Generic.List<StudentTherapy>();
            Messages = new System.Collections.Generic.List<Message>();
            MigrationProviderCaseNotesHistories = new System.Collections.Generic.List<MigrationProviderCaseNotesHistory>();
            SupervisorProviderStudentReferalSignOffs = new System.Collections.Generic.List<SupervisorProviderStudentReferalSignOff>();
            PendingReferrals = new System.Collections.Generic.List<PendingReferral>();
            TherapyCaseNotes = new System.Collections.Generic.List<TherapyCaseNote>();
            TherapyGroups = new System.Collections.Generic.List<TherapyGroup>();
            ProviderAcknowledgmentLogs = new System.Collections.Generic.List<ProviderAcknowledgmentLog>();
            ProviderCaseUploads = new System.Collections.Generic.List<ProviderCaseUpload>();
            ProviderEscAssignments = new System.Collections.Generic.List<ProviderEscAssignment>();
            ProviderInactivityDates = new System.Collections.Generic.List<ProviderInactivityDate>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
